unset shellHook
PATH=${PATH:-}
nix_saved_PATH="$PATH"
XDG_DATA_DIRS=${XDG_DATA_DIRS:-}
nix_saved_XDG_DATA_DIRS="$XDG_DATA_DIRS"
AR='ar'
export AR
AS='as'
export AS
BASH='/nix/store/xdqlrixlspkks50m9b0mpvag65m3pf2w-bash-5.2-p15/bin/bash'
CC='gcc'
export CC
CONFIG_SHELL='/nix/store/xdqlrixlspkks50m9b0mpvag65m3pf2w-bash-5.2-p15/bin/bash'
export CONFIG_SHELL
CXX='g++'
export CXX
HOSTTYPE='x86_64'
HOST_PATH='/nix/store/d48d0ppksa6gwxjlkwf2i93rilyv9jvq-ncurses-6.4/bin:/nix/store/mbp45k8vq1360k3c3m8j6m11n41yayzi-cabal-install-3.10.2.0/bin:/nix/store/x93xzs054hydmhjhx94w0dwq3iw0ydnj-nixpkgs-fmt-1.3.0/bin:/nix/store/y9gr7abwxvzcpg5g73vhnx1fpssr5frr-coreutils-9.3/bin:/nix/store/b6izr8wh0p7dyvh3cyg14wq2rn8d31ik-findutils-4.9.0/bin:/nix/store/q56n7lhjw724i7b33qaqra61p7m7c0cd-diffutils-3.10/bin:/nix/store/x23by79p38ll0js1alifmf3y56vqfs49-gnused-4.9/bin:/nix/store/xafzciap7acqhfx84dvqkp18bg4lrai3-gnugrep-3.11/bin:/nix/store/8kkn44iwdbgqkrj661nr4cjcpmrqqmx8-gawk-5.2.2/bin:/nix/store/89s3w7b4g78989kpzc7sy4phv0nqfira-gnutar-1.35/bin:/nix/store/2a9na7bp4r3290yqqzg503325dwglxyq-gzip-1.13/bin:/nix/store/gxknjk51s7q86llkbzpaqv43kflj9d8j-bzip2-1.0.8-bin/bin:/nix/store/2jp6cv2q4cgh91f5lp57p945rq98ldhr-gnumake-4.4.1/bin:/nix/store/xdqlrixlspkks50m9b0mpvag65m3pf2w-bash-5.2-p15/bin:/nix/store/c15ama0p8jr4mn0943yjk4rpa2hxk7ml-patch-2.7.6/bin:/nix/store/sb3sxnp4g40gfw758a0m4sjm7slvmax9-xz-5.4.4-bin/bin:/nix/store/xfjqspcc9442hi0lm0szv3sw75zswvml-file-5.45/bin'
export HOST_PATH
IFS=' 	
'
IN_NIX_SHELL='impure'
export IN_NIX_SHELL
LANG='en_US.UTF-8'
export LANG
LD='ld'
export LD
LINENO='76'
LOCALE_ARCHIVE='/nix/store/b3jny48vbii9jkfk95hx0pzpks5ym3dw-glibc-locales-2.37-8/lib/locale/locale-archive'
export LOCALE_ARCHIVE
MACHTYPE='x86_64-pc-linux-gnu'
NIX_BINTOOLS='/nix/store/mc6q3cdz5s0p1aj4y586bglsfsnsf2k8-binutils-wrapper-2.40'
export NIX_BINTOOLS
NIX_BINTOOLS_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu='1'
export NIX_BINTOOLS_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu
NIX_BUILD_CORES='4'
export NIX_BUILD_CORES
NIX_CC='/nix/store/18bs92p6yf6w2wwxhbplgx02y6anq092-gcc-wrapper-12.3.0'
export NIX_CC
NIX_CC_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu='1'
export NIX_CC_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu
NIX_CFLAGS_COMPILE=' -frandom-seed=az0xcg90p0 -isystem /nix/store/c3bblnpdkkaip9lklbadx7d73jxvd741-double-conversion-3.3.0/include -isystem /nix/store/c3bblnpdkkaip9lklbadx7d73jxvd741-double-conversion-3.3.0/include'
export NIX_CFLAGS_COMPILE
NIX_ENFORCE_NO_NATIVE='1'
export NIX_ENFORCE_NO_NATIVE
NIX_GHC='/nix/store/0bfi4wf9v4h82vmv4md785wjrv14h3ni-ghc-9.6.3-with-packages/bin/ghc'
export NIX_GHC
NIX_GHCPKG='/nix/store/0bfi4wf9v4h82vmv4md785wjrv14h3ni-ghc-9.6.3-with-packages/bin/ghc-pkg'
export NIX_GHCPKG
NIX_GHC_DOCDIR='/nix/store/0bfi4wf9v4h82vmv4md785wjrv14h3ni-ghc-9.6.3-with-packages/share/doc/ghc/html'
export NIX_GHC_DOCDIR
NIX_GHC_LIBDIR='/nix/store/0bfi4wf9v4h82vmv4md785wjrv14h3ni-ghc-9.6.3-with-packages/lib/ghc-9.6.3/lib'
export NIX_GHC_LIBDIR
NIX_HARDENING_ENABLE='fortify fortify3 stackprotector pic strictoverflow format relro bindnow'
export NIX_HARDENING_ENABLE
NIX_LDFLAGS='-rpath /home/jonathan/Documents/horizon-haskell-plutus-test/outputs/out/lib  -L/nix/store/c3bblnpdkkaip9lklbadx7d73jxvd741-double-conversion-3.3.0/lib -L/nix/store/d48d0ppksa6gwxjlkwf2i93rilyv9jvq-ncurses-6.4/lib -L/nix/store/35badg7gpxkhyzcrdyh2dfi9wfd43phz-libffi-3.4.4/lib -L/nix/store/458kqya5y1vxi9l4g26alfj5kwdm5si1-elfutils-0.189/lib -L/nix/store/qmfxliqa7drz0vamnr475jw5l5j01plx-gmp-with-cxx-6.3.0/lib -L/nix/store/c3bblnpdkkaip9lklbadx7d73jxvd741-double-conversion-3.3.0/lib -L/nix/store/d48d0ppksa6gwxjlkwf2i93rilyv9jvq-ncurses-6.4/lib -L/nix/store/35badg7gpxkhyzcrdyh2dfi9wfd43phz-libffi-3.4.4/lib -L/nix/store/458kqya5y1vxi9l4g26alfj5kwdm5si1-elfutils-0.189/lib -L/nix/store/qmfxliqa7drz0vamnr475jw5l5j01plx-gmp-with-cxx-6.3.0/lib'
export NIX_LDFLAGS
NIX_NO_SELF_RPATH='1'
NIX_STORE='/nix/store'
export NIX_STORE
NM='nm'
export NM
OBJCOPY='objcopy'
export OBJCOPY
OBJDUMP='objdump'
export OBJDUMP
OLDPWD=''
export OLDPWD
OPTERR='1'
OSTYPE='linux-gnu'
PATH='/nix/store/0bfi4wf9v4h82vmv4md785wjrv14h3ni-ghc-9.6.3-with-packages/bin:/nix/store/7jl18n2909zm5ms43k554ksfdv3187ag-constraints-extras-0.4.0.0/bin:/nix/store/xpxs8p06zll81qjnfx5knmf0i2bmnskr-pretty-show-1.10/bin:/nix/store/a2zl2rl9dlds1z76l9w5q12mf0qmb6k5-vty-unix-0.2.0.0/bin:/nix/store/zdl1axxjlfrndpa9hmxb5lgprjqhfrn0-criterion-1.6.3.0/bin:/nix/store/ay0p9mbw1w3zkvwzx3c94xq7x8jrn9wq-patchelf-0.15.0/bin:/nix/store/18bs92p6yf6w2wwxhbplgx02y6anq092-gcc-wrapper-12.3.0/bin:/nix/store/h5kvfrjmpw792v8jg7nrzfkffmn0iyy8-gcc-12.3.0/bin:/nix/store/f6in5kb2y5v06zinz1a6xy6cyg67q026-glibc-2.37-8-bin/bin:/nix/store/y9gr7abwxvzcpg5g73vhnx1fpssr5frr-coreutils-9.3/bin:/nix/store/mc6q3cdz5s0p1aj4y586bglsfsnsf2k8-binutils-wrapper-2.40/bin:/nix/store/74y3751gsixaz9797ib0hp7c658sp1y5-binutils-2.40/bin:/nix/store/d48d0ppksa6gwxjlkwf2i93rilyv9jvq-ncurses-6.4/bin:/nix/store/mbp45k8vq1360k3c3m8j6m11n41yayzi-cabal-install-3.10.2.0/bin:/nix/store/x93xzs054hydmhjhx94w0dwq3iw0ydnj-nixpkgs-fmt-1.3.0/bin:/nix/store/y9gr7abwxvzcpg5g73vhnx1fpssr5frr-coreutils-9.3/bin:/nix/store/b6izr8wh0p7dyvh3cyg14wq2rn8d31ik-findutils-4.9.0/bin:/nix/store/q56n7lhjw724i7b33qaqra61p7m7c0cd-diffutils-3.10/bin:/nix/store/x23by79p38ll0js1alifmf3y56vqfs49-gnused-4.9/bin:/nix/store/xafzciap7acqhfx84dvqkp18bg4lrai3-gnugrep-3.11/bin:/nix/store/8kkn44iwdbgqkrj661nr4cjcpmrqqmx8-gawk-5.2.2/bin:/nix/store/89s3w7b4g78989kpzc7sy4phv0nqfira-gnutar-1.35/bin:/nix/store/2a9na7bp4r3290yqqzg503325dwglxyq-gzip-1.13/bin:/nix/store/gxknjk51s7q86llkbzpaqv43kflj9d8j-bzip2-1.0.8-bin/bin:/nix/store/2jp6cv2q4cgh91f5lp57p945rq98ldhr-gnumake-4.4.1/bin:/nix/store/xdqlrixlspkks50m9b0mpvag65m3pf2w-bash-5.2-p15/bin:/nix/store/c15ama0p8jr4mn0943yjk4rpa2hxk7ml-patch-2.7.6/bin:/nix/store/sb3sxnp4g40gfw758a0m4sjm7slvmax9-xz-5.4.4-bin/bin:/nix/store/xfjqspcc9442hi0lm0szv3sw75zswvml-file-5.45/bin'
export PATH
PS4='+ '
RANLIB='ranlib'
export RANLIB
READELF='readelf'
export READELF
SIZE='size'
export SIZE
SOURCE_DATE_EPOCH='315532800'
export SOURCE_DATE_EPOCH
STRINGS='strings'
export STRINGS
STRIP='strip'
export STRIP
XDG_DATA_DIRS='/nix/store/0bfi4wf9v4h82vmv4md785wjrv14h3ni-ghc-9.6.3-with-packages/share:/nix/store/dwqp8iz77skscashi6ir928fkip28xr8-aeson-2.2.1.0/share:/nix/store/fzqq16lnaaqb7wdsygirc5075225v1d2-data-fix-0.3.2/share:/nix/store/6cvr0whw3xq4ygf6z8rlzl2r0q4ri1ba-hashable-1.4.3.0/share:/nix/store/hip6h0zam79fid3kpwm0glqn1csla3q8-dlist-1.0/share:/nix/store/z0jjrdfpqkghmxafp1j7cdp8cfqdii9y-generically-0.1.1/share:/nix/store/xxv372fqz3i2sy3j7ki9cajbf61ysvkl-indexed-traversable-0.1.3/share:/nix/store/dmcv1r5pwiykszr6yylrifflc4xz2zv9-integer-conversion-0.1.0.1/share:/nix/store/zphvz56b5i691i2dfbqy9x0pbqdl6b5z-primitive-0.9.0.0/share:/nix/store/g42d5kxqhf5v72q9l5cbz47f35adj2aj-integer-logarithms-1.0.3.1/share:/nix/store/zgpg0rpja7yigp16i9gjdg6q098q0yv5-network-uri-2.6.4.2/share:/nix/store/br5gp7r3f82132pra7lx4q5kcp426ncz-th-compat-0.1.4/share:/nix/store/v7pzbcvgpxrr3cjrvlij82p2c6pfh944-OneTuple-0.4.1.1/share:/nix/store/bcbkl2nfipcfy7l2pk11bhj38x1hwfqd-QuickCheck-2.14.3/share:/nix/store/5xpw2y3l9wzj02ndjx5r8cgzs5vbfrci-random-1.2.1.1/share:/nix/store/kr600gmh9r92blvi9g8y4bpwj0i6kkds-splitmix-0.1.0.5/share:/nix/store/58j99khvxz3xfxfbfnab2ramas560l51-scientific-0.3.7.0/share:/nix/store/apw0rd9lm2srpgkxk9w71zp12yvnkm5l-semialign-1.3/share:/nix/store/dfwlddzgr1sl9mar2gb8j0apjq156pcl-indexed-traversable-instances-0.1.1.2/share:/nix/store/c4rfkjc5hc07rjb5j3fk6vr3a6x2s955-tagged-0.8.8/share:/nix/store/jyvg6pdr5z3ch36rkq8wpfacvcn6wpxj-unordered-containers-0.2.19.1/share:/nix/store/1ri2x1p8vak2akpzxw83sizb2fcj12i4-vector-0.13.1.0/share:/nix/store/qriwahgbp76fbapv1iw5ia7p6jcj4jfs-vector-stream-0.1.0.0/share:/nix/store/gwf2i6x4fbrg20mvgx6shhq8dn7lkrzl-semigroupoids-6.0.0.1/share:/nix/store/iblaizxrrl8q9dl8hyicb6adnj2fa5aj-base-orphans-0.9.1/share:/nix/store/jm7k6dn1p570s216dlj23x5r9v1jsvg7-bifunctors-5.6.1/share:/nix/store/c83anr7xlrdk2vw7xxvgmq8in34mzs2x-assoc-1.1/share:/nix/store/zd0sh71xnwl76qnlgmis7zf97d6rkcc1-comonad-5.0.8/share:/nix/store/70nd7wxafw3rn9clip9sshpx2wi0krvk-distributive-0.6.2.1/share:/nix/store/j5a2s70g74cfbv565avhp65dqc7diqsk-transformers-compat-0.7.2/share:/nix/store/yd2gvbhaqc668scn1nfz805sj91abv97-th-abstraction-0.6.0.0/share:/nix/store/w6052zf6akfwi7rn941l74i73xjiia5v-contravariant-1.5.5/share:/nix/store/3wi55g3y060acivx0s9qfzarlh6w55qr-StateVar-1.2.2/share:/nix/store/hz6k8cpgzk451rps92m02dng04hp5l3c-these-1.2/share:/nix/store/grafws79jf11w2zqvr1ja11bn7vfl4br-strict-0.5/share:/nix/store/y8pmgfj65r0zqw52vapaf6677mw1kzax-text-iso8601-0.1/share:/nix/store/cppzhyssk3bpj9yynqd2y66x1dkb1c5w-time-compat-1.9.6.1/share:/nix/store/ric2m0m6rawp83dl3b7za5g5r45d4gwl-text-short-0.1.5/share:/nix/store/98v3p3rjchzsh3w3fpmcmcn1ynh7ir69-uuid-types-1.0.5.1/share:/nix/store/5mpzc181rlilkgh1y1b33q01bw7zzl8k-witherable-0.4.2/share:/nix/store/grsg0vbf61rfrs1ma8pmdyib1yikwhm1-barbies-2.0.4.0/share:/nix/store/0ibzbjpnbqnyan3g6vqfafivlpyk2mkn-base64-bytestring-1.2.1.0/share:/nix/store/lw4i8iw51j5n87p85zi8jdm3iic95xhk-bimap-0.5.0/share:/nix/store/l59qv7khd1q279nmb9nff5wf1b2cw448-basement-0.0.16/share:/nix/store/0gpf271k1fhk5qii4lixkdd7jq8bswhn-cryptonite-0.30/share:/nix/store/4715kkkzrzyx3j6q7z2fga7qqihxmdsh-memory-0.18.0/share:/nix/store/0pwmz59fhdpm1hyxg0awm04bvrlr417p-foundation-0.0.30/share:/nix/store/l9wy084780ackvih6gsnak83f9dpydn3-cardano-crypto-class-2.1.4.0/share:/nix/store/23l1mr2pam8gd0mwwxym2986bk9mkiff-base16-bytestring-1.0.2.0/share:/nix/store/0gj1nkx9nvrhs12ipla1sprfqhcl50ik-cardano-binary-1.7.1.0/share:/nix/store/x7r0jx9a3rpa79dpvp5msgcj08v7ql4i-cborg-0.2.9.0/share:/nix/store/q6s0ank2gf6s2rva6606nnq4z80ikl1l-half-0.3.1/share:/nix/store/8mxlbzi7g817481zc4wrdf1skii9jl8k-formatting-7.2.0/share:/nix/store/hf2arkwiwgqz7b7a4dqjlqxdi47hs9cx-clock-0.8.4/share:/nix/store/4qvrslxdzdr1k4hsfyg3s8ky486m8ly3-old-locale-1.0.0.7/share:/nix/store/whi5m24g62yk4r00rilrvzbb2ckhdbzb-recursion-schemes-5.2.2.4/share:/nix/store/d70lyn0hcnj8dix180wxmpiv3ds2xfa0-free-5.2/share:/nix/store/x5qiywjk0p1vzhd6vgmv7p7kfzvs9hka-profunctors-5.6.2/share:/nix/store/9vznjv95dzpmmpcic6fg2n6rlrgdjdbs-transformers-base-0.4.6/share:/nix/store/5swi9pa81pk3ljym54wvp92rnb4lrn20-safe-exceptions-0.1.7.4/share:/nix/store/q624swmvmcb4bfinpbj1f643df1f8rnx-tree-diff-0.3.0.1/share:/nix/store/87pk8c4rg43m3sibalhr8ircwfknqxkn-ansi-terminal-1.0/share:/nix/store/kvbs8dvpy71lnymd651l63cfd283dm95-ansi-terminal-types-0.11.5/share:/nix/store/vl6cc3ap7xkk2i3jg3ssggjm3kbaqbyl-ansi-wl-pprint-1.0.2/share:/nix/store/lp30gjflv5hmj20dkc48mg9chqld605i-prettyprinter-compat-ansi-wl-pprint-1.0.2/share:/nix/store/k03i9ispbaq3fxkp599jbb1mbpxp40nv-prettyprinter-1.7.1/share:/nix/store/87frpr35vmrygd98pgldpfk1wxhhmip6-prettyprinter-ansi-terminal-1.1.3/share:/nix/store/2q7s7sgr2hzdlckxj4yvrwbsf3rkp8xl-base-compat-0.13.1/share:/nix/store/yik6wpvr3r32mj790a26sn85cs19nblz-bytestring-builder-0.10.8.2.0/share:/nix/store/i85bd79dzm647n8py9b2mm3xx43yijq4-parsers-0.12.11/share:/nix/store/vx3d1v8w4mnckzd1gxvl1lh594wxwc71-attoparsec-0.14.4/share:/nix/store/bd51qm572r8m38nz00w9bf5yxg6jj18s-charset-0.3.10/share:/nix/store/a2nz5zjccx5gimq9m5fhy3cxd21qd2a1-data-default-class-0.1.2.0/share:/nix/store/pajpx7vl02g3xv00ggjhrhvi8vwhvnmy-fingertree-0.1.5.0/share:/nix/store/b7jgv9xj6iihk87m004fslbqnh3c1iqz-nothunks-0.1.5/share:/nix/store/b094fp5m5182f8wql1aqqzk5mayklakd-serialise-0.2.6.0/share:/nix/store/360gpwb4awc861w3hjhs5fsm8vq2s6dp-cassava-0.5.3.0/share:/nix/store/3dm0vkd498qdcflzffy5bi458cxnc6k1-Only-0.1/share:/nix/store/d0abizcy6q2pvnvnpabfys0lgbnp21i4-dependent-map-0.4.0.0/share:/nix/store/7jl18n2909zm5ms43k554ksfdv3187ag-constraints-extras-0.4.0.0/share:/nix/store/865a2w587nxf3p148vklqddsnsv1qbwc-constraints-0.14/share:/nix/store/baa4bvh0lj7rzbl6x5lx2f45cqwvzwyf-boring-0.2.1/share:/nix/store/frclnv10178rjdi4mi5iw54racrjx8nd-type-equality-1/share:/nix/store/1y0ffbw78qf2c3mix8nf7rprxb1vk4l2-some-1.0.5/share:/nix/store/cv51b76a3hcxq1j4ia4p3yqdb6gf4kpa-deriving-compat-0.6.5/share:/nix/store/jkr11y7zdkl8392q658kx48agy1qnrgs-extra-1.7.14/share:/nix/store/3fngxjq02pip7y5mdb1g1s7p9z853n87-foldl-1.4.15/share:/nix/store/n27yw6iiadghmidgk07144ah40qx51mm-logict-0.8.1.0/share:/nix/store/k17bnnx9ld4fhf222xh6ygr68lmjv242-mmorph-1.2.0/share:/nix/store/y98sgmrz4k5pmzy2qpzr1przqg4vcz6j-monad-control-1.0.3.1/share:/nix/store/0sxign1m2j018njzhzgnnzamvz8fsdp7-mono-traversable-1.0.15.3/share:/nix/store/zlzyyrq2hba6yndwswkpx60shjhmllp1-split-0.2.4/share:/nix/store/jsinm5fvc85fc7kqjni6lbm0ivj3w5a0-vector-algorithms-0.9.0.1/share:/nix/store/9f8kmj7izv2jvgzp35v87shkwjsm03wi-bitvec-1.1.5.0/share:/nix/store/7z9kwxmvh9v1qli6jadb53y6x5258zab-hedgehog-1.4/share:/nix/store/fp74xw4hgyjnyy7372r7apj8ay4kj0h3-async-2.2.4/share:/nix/store/x6jkcyb4w1idncjx3y0pljy8pm5hkqi2-concurrent-output-1.10.20/share:/nix/store/qfgh3ljf6nsrpadb6him095yf7vb8ahb-terminal-size-0.3.4/share:/nix/store/7nkx73js6pw9zigwf4i9fzjcpd140sfd-lifted-async-0.10.2.4/share:/nix/store/1rjykx22hc00as6v97wrbwq8vvwjfl9k-lifted-base-0.2.3.12/share:/nix/store/zb5qf613iicbl1vk7i7qlf6ghzhd0sda-haskell-lexer-1.1.1/share:/nix/store/vx5liyfp8p81cm1n96g3kmvjqryjdi7k-resourcet-1.3.0/share:/nix/store/h6ig9nianiyhx68f1sv1pjcww5zsfj9c-unliftio-core-0.2.1.0/share:/nix/store/1cdimvcfp7k1zf25wxgi6v4gnnlwp4k6-wl-pprint-annotated-0.1.0.1/share:/nix/store/5hprk3qwidxcr3ihnza4gbvc1501k7cb-size-based-0.1.3.2/share:/nix/store/j38a62yq3bq5sc7xhn2sckhdiwas0q40-lens-5.2.3/share:/nix/store/0px7pzhw71w0lpm35hh0mfdi0xa5mmd0-call-stack-0.4.0/share:/nix/store/sfrr6bd3sqg3j2sm68axjxivffgs8l90-kan-extensions-5.2.5/share:/nix/store/rwz6jnlpvambw0zb24s1p1p47wplbxdv-adjunctions-4.4.2/share:/nix/store/rf33gz126mqxnd7fgq4rdf7fnsyvivgc-semigroups-0.20/share:/nix/store/zc0ifdr9bqx318zz9g80fn3ylh49bsgx-void-0.7.3/share:/nix/store/n7xf4zdpk12vnq1igllf86njx97nnvia-invariant-0.6.2/share:/nix/store/k5dfgi0gakfnwvvg2ggvz1jymnb9836v-parallel-3.2.2.0/share:/nix/store/694h40fb2qlxkcdinwj29pkshw1vkgvs-reflection-2.1.7/share:/nix/store/74fdp05vxcc5vxxc9rsiz8irg5x24620-megaparsec-9.5.0/share:/nix/store/wm1x2n2813k6gz37xn7lw5frzcx0d8vr-case-insensitive-1.2.1.0/share:/nix/store/ca782dvmp17smglzqhg73ryp52jh1yzj-parser-combinators-1.3.0/share:/nix/store/nawvwx4x66s79hc5qdjbjkymks0iiphz-monoidal-containers-0.6.4.0/share:/nix/store/4phcp3rx3g0sbjfhabfmw171kpqflwvp-newtype-0.2.2.0/share:/nix/store/x6bgfn0k59djch308cm2czb5vxkxn99p-nonempty-vector-0.2.3/share:/nix/store/wdm7p28f45z6xm2h7m9b95pf8a5hg2x8-optparse-applicative-0.18.1.0/share:/nix/store/l2w9cd4n8pmwdhp79ng6k7l0bxhsphn6-prettyprinter-configurable-1.19.0.0/share:/nix/store/xnrmm0k45xyxvjhkjwdf5q2sr8p4r0sv-microlens-0.4.13.1/share:/nix/store/3vhgnd0jwrl6svh4lvb7vqg0grmlcamq-quickcheck-instances-0.3.30/share:/nix/store/yddqb4kblzbr2pvbsnn9kr3sfmnyx5g1-old-time-1.1.0.3/share:/nix/store/4gkcgd4161ckvl7q2n1r0lgh8ia1ghsr-bin-0.1.3/share:/nix/store/pgykqvp1z4fyxzxx7avwr0f1y7sd7dd0-dec-0.0.5/share:/nix/store/wklpy92fnh9ayq89mfywmskkna56dqfq-fin-0.3/share:/nix/store/jwcbwbzarfmm73wg8l1frqh9ggq373zl-universe-base-1.1.3.1/share:/nix/store/fbi8swcv64rb61rl03kj6q8d1aky574x-tasty-1.5/share:/nix/store/ns3wz1g3xi1yw6rybws1z6h4ghrj320f-tasty-golden-2.3.5/share:/nix/store/vi016xd2w4m1dr4p05snkm88pz1bmryy-temporary-1.3/share:/nix/store/ca5kxvwzxaj6hi1lznvp89bq5jd7dv8l-typed-process-0.2.11.1/share:/nix/store/fbvifb2nyrpbaxw8x1p7sg09za7hwk7w-tasty-hedgehog-1.4.0.2/share:/nix/store/8wrnnbs8236aidsnh0mm64x0kq741y6c-tasty-hunit-0.10.1/share:/nix/store/nia4y3gfdjispi04k1w17ibx5q6rymv0-th-lift-0.8.4/share:/nix/store/7f0lciz2r6jlmhl8qpjm92360hmrvs1i-th-lift-instances-0.1.20/share:/nix/store/0c1wd3hgh11k1bjlbkbykzicqw29vyla-th-utilities-0.2.5.0/share:/nix/store/rsk6zipnw46ha4zfpzzb87k8yv05lhx7-syb-0.7.2.4/share:/nix/store/mx0yxxnaic4bd6z2yv1fh608pj1jsj5a-th-orphans-0.13.14/share:/nix/store/21fmssigx9vn45ihpn97p5alhc1rkjlx-th-reify-many-0.1.10/share:/nix/store/v1pjd9wxln7jycp6xb8iwsmnqx7izj90-safe-0.3.19/share:/nix/store/f3pqmjf0c16s8kw0rg58hcgcqghznx9y-th-expand-syns-0.4.11.0/share:/nix/store/2y1pyf5rsndv25dh2kf106d5xaqs87aw-brick-2.3.1/share:/nix/store/rixk2nn9d91h9v4qdm10pl23zlp78v8x-config-ini-0.2.6.0/share:/nix/store/pcdiz39zdq1vv15jfvib52jqmvz63x71-data-clist-0.2/share:/nix/store/kp8647l14a0qmcnys57rmk0wk5yy4f2q-microlens-mtl-0.2.0.3/share:/nix/store/1g3vzpyszrxgqqd61jlsi8363mp7mixv-microlens-th-0.4.3.14/share:/nix/store/a8k0036qmkq8r4bbph2wx9m1m3gqfsb5-unix-compat-0.7/share:/nix/store/ywddjnbr1xngkwzq5j6s8acfjaqznr7z-vty-6.1/share:/nix/store/icqh20zn4yx1s3mvxx9nli3w0frhxrr8-blaze-builder-0.4.2.3/share:/nix/store/d3gi2ag8x9xzi46ka169vj5mz1gdjqcz-utf8-string-1.0.2/share:/nix/store/l23dbzvlx37058zbraarbs2dsgdnpdp2-vty-crossplatform-0.4.0.0/share:/nix/store/a2zl2rl9dlds1z76l9w5q12mf0qmb6k5-vty-unix-0.2.0.0/share:/nix/store/r8jsfz2pnxhcjj6l7px104778myjn2s6-word-wrap-0.5/share:/nix/store/jx5l3yvj8z46hgvlcswjnjhnl5qygw9j-base-compat-batteries-0.13.1/share:/nix/store/13c2lm4j058iknz5p8q2b0n5j0vl6bnf-binary-orphans-1.0.4.1/share:/nix/store/b1y3jq0gmff9aifh9dmnv2ya5g7wn6fk-code-page-0.2.1/share:/nix/store/n5p4vrxj7viwssxk8ashnj47ys50nza1-criterion-measurement-0.2.1.0/share:/nix/store/1islxrfvd2n63vd0dbbh4dwfpxi6r199-Glob-0.10.2/share:/nix/store/mxdn77r9gsp91bv95xg0l9645r7na210-microstache-1.0.2.3/share:/nix/store/24namvrg847d63llhb5sdzm4l44v7w5n-mwc-random-0.15.0.2/share:/nix/store/qwnswnxmcpsd2qnj0qdsdk46m26ddc2h-math-functions-0.3.4.2/share:/nix/store/qqv6pl6n3s3wdl8vcxpq5gk43nv4m74j-statistics-0.16.2.1/share:/nix/store/8xf74gpg8gcjlbl5b8c1nqv7cq8yim38-dense-linear-algebra-0.1.0.0/share:/nix/store/w0qwry8xibx0h2f7fczsg8zcnbzgwh5f-vector-binary-instances-0.2.5.2/share:/nix/store/8md59wvf7bfcy7cxl93nnx63sdfrhn99-vector-th-unbox-0.2.2/share:/nix/store/ay0p9mbw1w3zkvwzx3c94xq7x8jrn9wq-patchelf-0.15.0/share'
export XDG_DATA_DIRS
__structuredAttrs=''
export __structuredAttrs
buildInputs='/nix/store/mbp45k8vq1360k3c3m8j6m11n41yayzi-cabal-install-3.10.2.0 /nix/store/x93xzs054hydmhjhx94w0dwq3iw0ydnj-nixpkgs-fmt-1.3.0'
export buildInputs
builder='/nix/store/xdqlrixlspkks50m9b0mpvag65m3pf2w-bash-5.2-p15/bin/bash'
export builder
cmakeFlags=''
export cmakeFlags
configureFlags=''
export configureFlags
defaultBuildInputs=''
defaultNativeBuildInputs='/nix/store/ay0p9mbw1w3zkvwzx3c94xq7x8jrn9wq-patchelf-0.15.0 /nix/store/yllcj971mwa0rvgwvd876a52391m8s9y-update-autotools-gnu-config-scripts-hook /nix/store/h9lc1dpi14z7is86ffhl3ld569138595-audit-tmpdir.sh /nix/store/m54bmrhj6fqz8nds5zcj97w9s9bckc9v-compress-man-pages.sh /nix/store/wgrbkkaldkrlrni33ccvm3b6vbxzb656-make-symlinks-relative.sh /nix/store/5yzw0vhkyszf2d179m0qfkgxmp5wjjx4-move-docs.sh /nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh /nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh /nix/store/pag6l61paj1dc9sv15l7bm5c17xn5kyk-move-systemd-user-units.sh /nix/store/jivxp510zxakaaic7qkrb7v1dd2rdbw9-multiple-outputs.sh /nix/store/wzdsbnv2ba3nj91aql8jjdddfmkkdh7h-patch-shebangs.sh /nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh /nix/store/xyff06pkhki3qy1ls77w10s0v79c9il0-reproducible-builds.sh /nix/store/ngg1cv31c8c7bcm2n8ww4g06nq7s4zhm-set-source-date-epoch-to-latest.sh /nix/store/wmknncrif06fqxa16hpdldhixk95nds0-strip.sh /nix/store/18bs92p6yf6w2wwxhbplgx02y6anq092-gcc-wrapper-12.3.0'
depsBuildBuild=''
export depsBuildBuild
depsBuildBuildPropagated=''
export depsBuildBuildPropagated
depsBuildTarget=''
export depsBuildTarget
depsBuildTargetPropagated=''
export depsBuildTargetPropagated
depsHostHost=''
export depsHostHost
depsHostHostPropagated=''
export depsHostHostPropagated
depsTargetTarget=''
export depsTargetTarget
depsTargetTargetPropagated=''
export depsTargetTargetPropagated
doCheck=''
export doCheck
doInstallCheck=''
export doInstallCheck
dontAddDisableDepTrack='1'
export dontAddDisableDepTrack
declare -a envBuildBuildHooks=()
declare -a envBuildHostHooks=()
declare -a envBuildTargetHooks=()
declare -a envHostHostHooks=('ccWrapper_addCVars' 'bintoolsWrapper_addLDVars' )
declare -a envHostTargetHooks=('ccWrapper_addCVars' 'bintoolsWrapper_addLDVars' )
declare -a envTargetTargetHooks=()
declare -a fixupOutputHooks=('if [ -z "${dontPatchELF-}" ]; then patchELF "$prefix"; fi' 'if [[ -z "${noAuditTmpdir-}" && -e "$prefix" ]]; then auditTmpdir "$prefix"; fi' 'if [ -z "${dontGzipMan-}" ]; then compressManPages "$prefix"; fi' '_moveLib64' '_moveSbin' '_moveSystemdUserUnits' 'patchShebangsAuto' '_pruneLibtoolFiles' '_doStrip' )
guess='4'
initialPath='/nix/store/y9gr7abwxvzcpg5g73vhnx1fpssr5frr-coreutils-9.3 /nix/store/b6izr8wh0p7dyvh3cyg14wq2rn8d31ik-findutils-4.9.0 /nix/store/q56n7lhjw724i7b33qaqra61p7m7c0cd-diffutils-3.10 /nix/store/x23by79p38ll0js1alifmf3y56vqfs49-gnused-4.9 /nix/store/xafzciap7acqhfx84dvqkp18bg4lrai3-gnugrep-3.11 /nix/store/8kkn44iwdbgqkrj661nr4cjcpmrqqmx8-gawk-5.2.2 /nix/store/89s3w7b4g78989kpzc7sy4phv0nqfira-gnutar-1.35 /nix/store/2a9na7bp4r3290yqqzg503325dwglxyq-gzip-1.13 /nix/store/gxknjk51s7q86llkbzpaqv43kflj9d8j-bzip2-1.0.8-bin /nix/store/2jp6cv2q4cgh91f5lp57p945rq98ldhr-gnumake-4.4.1 /nix/store/xdqlrixlspkks50m9b0mpvag65m3pf2w-bash-5.2-p15 /nix/store/c15ama0p8jr4mn0943yjk4rpa2hxk7ml-patch-2.7.6 /nix/store/sb3sxnp4g40gfw758a0m4sjm7slvmax9-xz-5.4.4-bin /nix/store/xfjqspcc9442hi0lm0szv3sw75zswvml-file-5.45'
installPhase='echo $nativeBuildInputs $buildInputs > $out'
export installPhase
mesonFlags=''
export mesonFlags
name='ghc-shell-for-horizon-plutus-template-0.1.0.0-env'
export name
nativeBuildInputs='/nix/store/0bfi4wf9v4h82vmv4md785wjrv14h3ni-ghc-9.6.3-with-packages'
export nativeBuildInputs
out='/home/jonathan/Documents/horizon-haskell-plutus-test/outputs/out'
export out
outputBin='out'
outputDev='out'
outputDevdoc='REMOVE'
outputDevman='out'
outputDoc='out'
outputInclude='out'
outputInfo='out'
outputLib='out'
outputMan='out'
outputs='out'
export outputs
patches=''
export patches
phases='installPhase'
export phases
pkg='/nix/store/18bs92p6yf6w2wwxhbplgx02y6anq092-gcc-wrapper-12.3.0'
declare -a pkgsBuildBuild=()
declare -a pkgsBuildHost=('/nix/store/0bfi4wf9v4h82vmv4md785wjrv14h3ni-ghc-9.6.3-with-packages' '/nix/store/dwqp8iz77skscashi6ir928fkip28xr8-aeson-2.2.1.0' '/nix/store/fzqq16lnaaqb7wdsygirc5075225v1d2-data-fix-0.3.2' '/nix/store/6cvr0whw3xq4ygf6z8rlzl2r0q4ri1ba-hashable-1.4.3.0' '/nix/store/hip6h0zam79fid3kpwm0glqn1csla3q8-dlist-1.0' '/nix/store/z0jjrdfpqkghmxafp1j7cdp8cfqdii9y-generically-0.1.1' '/nix/store/xxv372fqz3i2sy3j7ki9cajbf61ysvkl-indexed-traversable-0.1.3' '/nix/store/dmcv1r5pwiykszr6yylrifflc4xz2zv9-integer-conversion-0.1.0.1' '/nix/store/zphvz56b5i691i2dfbqy9x0pbqdl6b5z-primitive-0.9.0.0' '/nix/store/g42d5kxqhf5v72q9l5cbz47f35adj2aj-integer-logarithms-1.0.3.1' '/nix/store/zgpg0rpja7yigp16i9gjdg6q098q0yv5-network-uri-2.6.4.2' '/nix/store/br5gp7r3f82132pra7lx4q5kcp426ncz-th-compat-0.1.4' '/nix/store/v7pzbcvgpxrr3cjrvlij82p2c6pfh944-OneTuple-0.4.1.1' '/nix/store/bcbkl2nfipcfy7l2pk11bhj38x1hwfqd-QuickCheck-2.14.3' '/nix/store/5xpw2y3l9wzj02ndjx5r8cgzs5vbfrci-random-1.2.1.1' '/nix/store/kr600gmh9r92blvi9g8y4bpwj0i6kkds-splitmix-0.1.0.5' '/nix/store/kr600gmh9r92blvi9g8y4bpwj0i6kkds-splitmix-0.1.0.5' '/nix/store/58j99khvxz3xfxfbfnab2ramas560l51-scientific-0.3.7.0' '/nix/store/apw0rd9lm2srpgkxk9w71zp12yvnkm5l-semialign-1.3' '/nix/store/dfwlddzgr1sl9mar2gb8j0apjq156pcl-indexed-traversable-instances-0.1.1.2' '/nix/store/c4rfkjc5hc07rjb5j3fk6vr3a6x2s955-tagged-0.8.8' '/nix/store/jyvg6pdr5z3ch36rkq8wpfacvcn6wpxj-unordered-containers-0.2.19.1' '/nix/store/1ri2x1p8vak2akpzxw83sizb2fcj12i4-vector-0.13.1.0' '/nix/store/qriwahgbp76fbapv1iw5ia7p6jcj4jfs-vector-stream-0.1.0.0' '/nix/store/gwf2i6x4fbrg20mvgx6shhq8dn7lkrzl-semigroupoids-6.0.0.1' '/nix/store/iblaizxrrl8q9dl8hyicb6adnj2fa5aj-base-orphans-0.9.1' '/nix/store/jm7k6dn1p570s216dlj23x5r9v1jsvg7-bifunctors-5.6.1' '/nix/store/c83anr7xlrdk2vw7xxvgmq8in34mzs2x-assoc-1.1' '/nix/store/zd0sh71xnwl76qnlgmis7zf97d6rkcc1-comonad-5.0.8' '/nix/store/70nd7wxafw3rn9clip9sshpx2wi0krvk-distributive-0.6.2.1' '/nix/store/j5a2s70g74cfbv565avhp65dqc7diqsk-transformers-compat-0.7.2' '/nix/store/yd2gvbhaqc668scn1nfz805sj91abv97-th-abstraction-0.6.0.0' '/nix/store/w6052zf6akfwi7rn941l74i73xjiia5v-contravariant-1.5.5' '/nix/store/3wi55g3y060acivx0s9qfzarlh6w55qr-StateVar-1.2.2' '/nix/store/hz6k8cpgzk451rps92m02dng04hp5l3c-these-1.2' '/nix/store/grafws79jf11w2zqvr1ja11bn7vfl4br-strict-0.5' '/nix/store/y8pmgfj65r0zqw52vapaf6677mw1kzax-text-iso8601-0.1' '/nix/store/cppzhyssk3bpj9yynqd2y66x1dkb1c5w-time-compat-1.9.6.1' '/nix/store/ric2m0m6rawp83dl3b7za5g5r45d4gwl-text-short-0.1.5' '/nix/store/98v3p3rjchzsh3w3fpmcmcn1ynh7ir69-uuid-types-1.0.5.1' '/nix/store/5mpzc181rlilkgh1y1b33q01bw7zzl8k-witherable-0.4.2' '/nix/store/d96y7p3f5rnk6alxbgrp8xqx3lba2wrh-algebraic-graphs-0.7' '/nix/store/grsg0vbf61rfrs1ma8pmdyib1yikwhm1-barbies-2.0.4.0' '/nix/store/0ibzbjpnbqnyan3g6vqfafivlpyk2mkn-base64-bytestring-1.2.1.0' '/nix/store/lw4i8iw51j5n87p85zi8jdm3iic95xhk-bimap-0.5.0' '/nix/store/hg2nb5x9m1q9snp0s77kjb57n45kljbz-cardano-crypto-1.1.2' '/nix/store/l59qv7khd1q279nmb9nff5wf1b2cw448-basement-0.0.16' '/nix/store/0gpf271k1fhk5qii4lixkdd7jq8bswhn-cryptonite-0.30' '/nix/store/4715kkkzrzyx3j6q7z2fga7qqihxmdsh-memory-0.18.0' '/nix/store/0pwmz59fhdpm1hyxg0awm04bvrlr417p-foundation-0.0.30' '/nix/store/l9wy084780ackvih6gsnak83f9dpydn3-cardano-crypto-class-2.1.4.0' '/nix/store/23l1mr2pam8gd0mwwxym2986bk9mkiff-base16-bytestring-1.0.2.0' '/nix/store/0gj1nkx9nvrhs12ipla1sprfqhcl50ik-cardano-binary-1.7.1.0' '/nix/store/x7r0jx9a3rpa79dpvp5msgcj08v7ql4i-cborg-0.2.9.0' '/nix/store/q6s0ank2gf6s2rva6606nnq4z80ikl1l-half-0.3.1' '/nix/store/8mxlbzi7g817481zc4wrdf1skii9jl8k-formatting-7.2.0' '/nix/store/hf2arkwiwgqz7b7a4dqjlqxdi47hs9cx-clock-0.8.4' '/nix/store/c3bblnpdkkaip9lklbadx7d73jxvd741-double-conversion-3.3.0' '/nix/store/4qvrslxdzdr1k4hsfyg3s8ky486m8ly3-old-locale-1.0.0.7' '/nix/store/whi5m24g62yk4r00rilrvzbb2ckhdbzb-recursion-schemes-5.2.2.4' '/nix/store/d70lyn0hcnj8dix180wxmpiv3ds2xfa0-free-5.2' '/nix/store/x5qiywjk0p1vzhd6vgmv7p7kfzvs9hka-profunctors-5.6.2' '/nix/store/9vznjv95dzpmmpcic6fg2n6rlrgdjdbs-transformers-base-0.4.6' '/nix/store/5swi9pa81pk3ljym54wvp92rnb4lrn20-safe-exceptions-0.1.7.4' '/nix/store/q624swmvmcb4bfinpbj1f643df1f8rnx-tree-diff-0.3.0.1' '/nix/store/87pk8c4rg43m3sibalhr8ircwfknqxkn-ansi-terminal-1.0' '/nix/store/kvbs8dvpy71lnymd651l63cfd283dm95-ansi-terminal-types-0.11.5' '/nix/store/w34cnq5p9xhfnhhp2wyfa86hm3w0kxlm-colour-2.3.6' '/nix/store/w34cnq5p9xhfnhhp2wyfa86hm3w0kxlm-colour-2.3.6' '/nix/store/vl6cc3ap7xkk2i3jg3ssggjm3kbaqbyl-ansi-wl-pprint-1.0.2' '/nix/store/lp30gjflv5hmj20dkc48mg9chqld605i-prettyprinter-compat-ansi-wl-pprint-1.0.2' '/nix/store/k03i9ispbaq3fxkp599jbb1mbpxp40nv-prettyprinter-1.7.1' '/nix/store/87frpr35vmrygd98pgldpfk1wxhhmip6-prettyprinter-ansi-terminal-1.1.3' '/nix/store/2q7s7sgr2hzdlckxj4yvrwbsf3rkp8xl-base-compat-0.13.1' '/nix/store/yik6wpvr3r32mj790a26sn85cs19nblz-bytestring-builder-0.10.8.2.0' '/nix/store/i85bd79dzm647n8py9b2mm3xx43yijq4-parsers-0.12.11' '/nix/store/vx3d1v8w4mnckzd1gxvl1lh594wxwc71-attoparsec-0.14.4' '/nix/store/bd51qm572r8m38nz00w9bf5yxg6jj18s-charset-0.3.10' '/nix/store/l841a7wld773sjd3w3y75qknn64wgqc0-cardano-strict-containers-0.1.2.1' '/nix/store/a2nz5zjccx5gimq9m5fhy3cxd21qd2a1-data-default-class-0.1.2.0' '/nix/store/pajpx7vl02g3xv00ggjhrhvi8vwhvnmy-fingertree-0.1.5.0' '/nix/store/b7jgv9xj6iihk87m004fslbqnh3c1iqz-nothunks-0.1.5' '/nix/store/b094fp5m5182f8wql1aqqzk5mayklakd-serialise-0.2.6.0' '/nix/store/kl75bqkzy38c25a65dwhz9k5ax2rbrmc-heapwords-0.1.0.2' '/nix/store/360gpwb4awc861w3hjhs5fsm8vq2s6dp-cassava-0.5.3.0' '/nix/store/3dm0vkd498qdcflzffy5bi458cxnc6k1-Only-0.1' '/nix/store/dbaqp39sy4cbizm6knhlrkv09baabs2s-composition-prelude-3.0.0.2' '/nix/store/d0abizcy6q2pvnvnpabfys0lgbnp21i4-dependent-map-0.4.0.0' '/nix/store/7jl18n2909zm5ms43k554ksfdv3187ag-constraints-extras-0.4.0.0' '/nix/store/865a2w587nxf3p148vklqddsnsv1qbwc-constraints-0.14' '/nix/store/baa4bvh0lj7rzbl6x5lx2f45cqwvzwyf-boring-0.2.1' '/nix/store/frclnv10178rjdi4mi5iw54racrjx8nd-type-equality-1' '/nix/store/s5s0k4bhg3amv2h8p0m26y8gpc2qcpsx-dependent-sum-0.7.2.0' '/nix/store/1y0ffbw78qf2c3mix8nf7rprxb1vk4l2-some-1.0.5' '/nix/store/1fd86a0n996vqp6nfch0iyp89k1gq4l3-deriving-aeson-0.2.9' '/nix/store/cv51b76a3hcxq1j4ia4p3yqdb6gf4kpa-deriving-compat-0.6.5' '/nix/store/hzmfywhlfmhpgcsgxgkl6bvgqz1hc428-dom-lt-0.2.3' '/nix/store/jkr11y7zdkl8392q658kx48agy1qnrgs-extra-1.7.14' '/nix/store/i4gcdiqw26dlmfqngz5rm17bfqbr52kh-flat-0.6' '/nix/store/0mzv1kv2hbslpfzldm8wriqsqr4f74rx-list-t-1.0.5.7' '/nix/store/3fngxjq02pip7y5mdb1g1s7p9z853n87-foldl-1.4.15' '/nix/store/n27yw6iiadghmidgk07144ah40qx51mm-logict-0.8.1.0' '/nix/store/k17bnnx9ld4fhf222xh6ygr68lmjv242-mmorph-1.2.0' '/nix/store/y98sgmrz4k5pmzy2qpzr1przqg4vcz6j-monad-control-1.0.3.1' '/nix/store/0sxign1m2j018njzhzgnnzamvz8fsdp7-mono-traversable-1.0.15.3' '/nix/store/zlzyyrq2hba6yndwswkpx60shjhmllp1-split-0.2.4' '/nix/store/jsinm5fvc85fc7kqjni6lbm0ivj3w5a0-vector-algorithms-0.9.0.1' '/nix/store/9f8kmj7izv2jvgzp35v87shkwjsm03wi-bitvec-1.1.5.0' '/nix/store/7z9kwxmvh9v1qli6jadb53y6x5258zab-hedgehog-1.4' '/nix/store/fp74xw4hgyjnyy7372r7apj8ay4kj0h3-async-2.2.4' '/nix/store/x6jkcyb4w1idncjx3y0pljy8pm5hkqi2-concurrent-output-1.10.20' '/nix/store/qfgh3ljf6nsrpadb6him095yf7vb8ahb-terminal-size-0.3.4' '/nix/store/95kg3g0nzkd9yv1c0kbai6bnd0p44kfh-erf-2.0.0.0' '/nix/store/7nkx73js6pw9zigwf4i9fzjcpd140sfd-lifted-async-0.10.2.4' '/nix/store/1rjykx22hc00as6v97wrbwq8vvwjfl9k-lifted-base-0.2.3.12' '/nix/store/xpxs8p06zll81qjnfx5knmf0i2bmnskr-pretty-show-1.10' '/nix/store/zb5qf613iicbl1vk7i7qlf6ghzhd0sda-haskell-lexer-1.1.1' '/nix/store/vx5liyfp8p81cm1n96g3kmvjqryjdi7k-resourcet-1.3.0' '/nix/store/h6ig9nianiyhx68f1sv1pjcww5zsfj9c-unliftio-core-0.2.1.0' '/nix/store/1cdimvcfp7k1zf25wxgi6v4gnnlwp4k6-wl-pprint-annotated-0.1.0.1' '/nix/store/ma4pm0i0bpyzy151jz2gdg4x9qk48jqs-lazy-search-0.1.3.0' '/nix/store/5hprk3qwidxcr3ihnza4gbvc1501k7cb-size-based-0.1.3.2' '/nix/store/q49hayq7nwkiy8ay4dm06y06xc08chxi-dictionary-sharing-0.1.0.0' '/nix/store/536vk3nvz6cvpx3824nljqn417v0x1cr-testing-type-modifiers-0.1.0.1' '/nix/store/j38a62yq3bq5sc7xhn2sckhdiwas0q40-lens-5.2.3' '/nix/store/0px7pzhw71w0lpm35hh0mfdi0xa5mmd0-call-stack-0.4.0' '/nix/store/sfrr6bd3sqg3j2sm68axjxivffgs8l90-kan-extensions-5.2.5' '/nix/store/rwz6jnlpvambw0zb24s1p1p47wplbxdv-adjunctions-4.4.2' '/nix/store/rf33gz126mqxnd7fgq4rdf7fnsyvivgc-semigroups-0.20' '/nix/store/zc0ifdr9bqx318zz9g80fn3ylh49bsgx-void-0.7.3' '/nix/store/n7xf4zdpk12vnq1igllf86njx97nnvia-invariant-0.6.2' '/nix/store/k5dfgi0gakfnwvvg2ggvz1jymnb9836v-parallel-3.2.2.0' '/nix/store/694h40fb2qlxkcdinwj29pkshw1vkgvs-reflection-2.1.7' '/nix/store/74fdp05vxcc5vxxc9rsiz8irg5x24620-megaparsec-9.5.0' '/nix/store/wm1x2n2813k6gz37xn7lw5frzcx0d8vr-case-insensitive-1.2.1.0' '/nix/store/ca782dvmp17smglzqhg73ryp52jh1yzj-parser-combinators-1.3.0' '/nix/store/nawvwx4x66s79hc5qdjbjkymks0iiphz-monoidal-containers-0.6.4.0' '/nix/store/4phcp3rx3g0sbjfhabfmw171kpqflwvp-newtype-0.2.2.0' '/nix/store/sa5lssrg829k90s1bpxzzzrd5m8m33c6-multiset-0.3.4.3' '/nix/store/x6bgfn0k59djch308cm2czb5vxkxn99p-nonempty-vector-0.2.3' '/nix/store/wdm7p28f45z6xm2h7m9b95pf8a5hg2x8-optparse-applicative-0.18.1.0' '/nix/store/l2w9cd4n8pmwdhp79ng6k7l0bxhsphn6-prettyprinter-configurable-1.19.0.0' '/nix/store/xnrmm0k45xyxvjhkjwdf5q2sr8p4r0sv-microlens-0.4.13.1' '/nix/store/3vhgnd0jwrl6svh4lvb7vqg0grmlcamq-quickcheck-instances-0.3.30' '/nix/store/yddqb4kblzbr2pvbsnn9kr3sfmnyx5g1-old-time-1.1.0.3' '/nix/store/8bzvs6f3hlqyfsgnsnzd6q3z6fnigzzc-quickcheck-transformer-0.3.1.2' '/nix/store/sxn7gnix1jxpdpm3vx177vp2hs5iycnk-ral-0.2.1' '/nix/store/4gkcgd4161ckvl7q2n1r0lgh8ia1ghsr-bin-0.1.3' '/nix/store/pgykqvp1z4fyxzxx7avwr0f1y7sd7dd0-dec-0.0.5' '/nix/store/wklpy92fnh9ayq89mfywmskkna56dqfq-fin-0.3' '/nix/store/jwcbwbzarfmm73wg8l1frqh9ggq373zl-universe-base-1.1.3.1' '/nix/store/dwfx1vywrq3311w4vdzpma5lrv9gkzg3-Stream-0.4.7.2' '/nix/store/yhqzag5h7i312qyrk8pp2lzh9v5ly5sg-lazysmallcheck-0.6' '/nix/store/fbi8swcv64rb61rl03kj6q8d1aky574x-tasty-1.5' '/nix/store/ns3wz1g3xi1yw6rybws1z6h4ghrj320f-tasty-golden-2.3.5' '/nix/store/vi016xd2w4m1dr4p05snkm88pz1bmryy-temporary-1.3' '/nix/store/ca5kxvwzxaj6hi1lznvp89bq5jd7dv8l-typed-process-0.2.11.1' '/nix/store/fbvifb2nyrpbaxw8x1p7sg09za7hwk7w-tasty-hedgehog-1.4.0.2' '/nix/store/8wrnnbs8236aidsnh0mm64x0kq741y6c-tasty-hunit-0.10.1' '/nix/store/nia4y3gfdjispi04k1w17ibx5q6rymv0-th-lift-0.8.4' '/nix/store/7f0lciz2r6jlmhl8qpjm92360hmrvs1i-th-lift-instances-0.1.20' '/nix/store/0c1wd3hgh11k1bjlbkbykzicqw29vyla-th-utilities-0.2.5.0' '/nix/store/rsk6zipnw46ha4zfpzzb87k8yv05lhx7-syb-0.7.2.4' '/nix/store/mx0yxxnaic4bd6z2yv1fh608pj1jsj5a-th-orphans-0.13.14' '/nix/store/21fmssigx9vn45ihpn97p5alhc1rkjlx-th-reify-many-0.1.10' '/nix/store/v1pjd9wxln7jycp6xb8iwsmnqx7izj90-safe-0.3.19' '/nix/store/f3pqmjf0c16s8kw0rg58hcgcqghznx9y-th-expand-syns-0.4.11.0' '/nix/store/2y1pyf5rsndv25dh2kf106d5xaqs87aw-brick-2.3.1' '/nix/store/rixk2nn9d91h9v4qdm10pl23zlp78v8x-config-ini-0.2.6.0' '/nix/store/pcdiz39zdq1vv15jfvib52jqmvz63x71-data-clist-0.2' '/nix/store/kp8647l14a0qmcnys57rmk0wk5yy4f2q-microlens-mtl-0.2.0.3' '/nix/store/1g3vzpyszrxgqqd61jlsi8363mp7mixv-microlens-th-0.4.3.14' '/nix/store/s2bhn57sawyprc5mbz4f33v3xs5dmr73-text-zipper-0.13' '/nix/store/a8k0036qmkq8r4bbph2wx9m1m3gqfsb5-unix-compat-0.7' '/nix/store/ywddjnbr1xngkwzq5j6s8acfjaqznr7z-vty-6.1' '/nix/store/icqh20zn4yx1s3mvxx9nli3w0frhxrr8-blaze-builder-0.4.2.3' '/nix/store/d3gi2ag8x9xzi46ka169vj5mz1gdjqcz-utf8-string-1.0.2' '/nix/store/l23dbzvlx37058zbraarbs2dsgdnpdp2-vty-crossplatform-0.4.0.0' '/nix/store/a2zl2rl9dlds1z76l9w5q12mf0qmb6k5-vty-unix-0.2.0.0' '/nix/store/r8jsfz2pnxhcjj6l7px104778myjn2s6-word-wrap-0.5' '/nix/store/zdl1axxjlfrndpa9hmxb5lgprjqhfrn0-criterion-1.6.3.0' '/nix/store/jx5l3yvj8z46hgvlcswjnjhnl5qygw9j-base-compat-batteries-0.13.1' '/nix/store/13c2lm4j058iknz5p8q2b0n5j0vl6bnf-binary-orphans-1.0.4.1' '/nix/store/b1y3jq0gmff9aifh9dmnv2ya5g7wn6fk-code-page-0.2.1' '/nix/store/n5p4vrxj7viwssxk8ashnj47ys50nza1-criterion-measurement-0.2.1.0' '/nix/store/1islxrfvd2n63vd0dbbh4dwfpxi6r199-Glob-0.10.2' '/nix/store/qjjdimyin64k24n2m86rf9s7ls9j56wn-js-chart-2.9.4.1' '/nix/store/mxdn77r9gsp91bv95xg0l9645r7na210-microstache-1.0.2.3' '/nix/store/24namvrg847d63llhb5sdzm4l44v7w5n-mwc-random-0.15.0.2' '/nix/store/qwnswnxmcpsd2qnj0qdsdk46m26ddc2h-math-functions-0.3.4.2' '/nix/store/qqv6pl6n3s3wdl8vcxpq5gk43nv4m74j-statistics-0.16.2.1' '/nix/store/8xf74gpg8gcjlbl5b8c1nqv7cq8yim38-dense-linear-algebra-0.1.0.0' '/nix/store/w0qwry8xibx0h2f7fczsg8zcnbzgwh5f-vector-binary-instances-0.2.5.2' '/nix/store/8md59wvf7bfcy7cxl93nnx63sdfrhn99-vector-th-unbox-0.2.2' '/nix/store/8md59wvf7bfcy7cxl93nnx63sdfrhn99-vector-th-unbox-0.2.2' '/nix/store/ay0p9mbw1w3zkvwzx3c94xq7x8jrn9wq-patchelf-0.15.0' '/nix/store/yllcj971mwa0rvgwvd876a52391m8s9y-update-autotools-gnu-config-scripts-hook' '/nix/store/h9lc1dpi14z7is86ffhl3ld569138595-audit-tmpdir.sh' '/nix/store/m54bmrhj6fqz8nds5zcj97w9s9bckc9v-compress-man-pages.sh' '/nix/store/wgrbkkaldkrlrni33ccvm3b6vbxzb656-make-symlinks-relative.sh' '/nix/store/5yzw0vhkyszf2d179m0qfkgxmp5wjjx4-move-docs.sh' '/nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh' '/nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh' '/nix/store/pag6l61paj1dc9sv15l7bm5c17xn5kyk-move-systemd-user-units.sh' '/nix/store/jivxp510zxakaaic7qkrb7v1dd2rdbw9-multiple-outputs.sh' '/nix/store/wzdsbnv2ba3nj91aql8jjdddfmkkdh7h-patch-shebangs.sh' '/nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh' '/nix/store/xyff06pkhki3qy1ls77w10s0v79c9il0-reproducible-builds.sh' '/nix/store/ngg1cv31c8c7bcm2n8ww4g06nq7s4zhm-set-source-date-epoch-to-latest.sh' '/nix/store/wmknncrif06fqxa16hpdldhixk95nds0-strip.sh' '/nix/store/18bs92p6yf6w2wwxhbplgx02y6anq092-gcc-wrapper-12.3.0' '/nix/store/mc6q3cdz5s0p1aj4y586bglsfsnsf2k8-binutils-wrapper-2.40' )
declare -a pkgsBuildTarget=()
declare -a pkgsHostHost=('/nix/store/d48d0ppksa6gwxjlkwf2i93rilyv9jvq-ncurses-6.4' '/nix/store/35badg7gpxkhyzcrdyh2dfi9wfd43phz-libffi-3.4.4' '/nix/store/458kqya5y1vxi9l4g26alfj5kwdm5si1-elfutils-0.189' '/nix/store/qmfxliqa7drz0vamnr475jw5l5j01plx-gmp-with-cxx-6.3.0' )
declare -a pkgsHostTarget=('/nix/store/mbp45k8vq1360k3c3m8j6m11n41yayzi-cabal-install-3.10.2.0' '/nix/store/fp74xw4hgyjnyy7372r7apj8ay4kj0h3-async-2.2.4' '/nix/store/6cvr0whw3xq4ygf6z8rlzl2r0q4ri1ba-hashable-1.4.3.0' '/nix/store/23l1mr2pam8gd0mwwxym2986bk9mkiff-base16-bytestring-1.0.2.0' '/nix/store/0ibzbjpnbqnyan3g6vqfafivlpyk2mkn-base64-bytestring-1.2.1.0' '/nix/store/gh04vdaqq522s4qywg20p9kbf1c5pjbw-cabal-install-solver-3.10.2.0' '/nix/store/mp2hmdm21l3srwjphcgclpzvqnsv4i9z-edit-distance-0.2.2.1' '/nix/store/5xpw2y3l9wzj02ndjx5r8cgzs5vbfrci-random-1.2.1.1' '/nix/store/kr600gmh9r92blvi9g8y4bpwj0i6kkds-splitmix-0.1.0.5' '/nix/store/8xfgxz3s10apcb1acjfkh2z3b3j4cy4d-cryptohash-sha256-0.11.102.1' '/nix/store/nyr3ljrkzpbfbj9ds6zb4nyrjsx7h62j-echo-0.1.4' '/nix/store/k79h54p06nllb34jb5g999mz7mxd7p7b-hackage-security-0.6.2.3' '/nix/store/x8ck8573l57wnpngbx5qzmkczq87k3vi-ed25519-0.0.5.0' '/nix/store/yliyhvs83yw0l227wfd3j184szm2k86b-lukko-0.1.1.3' '/nix/store/jmcwvvp9djj4cy0vxq4gzpv5hq4dsgmz-network-3.1.4.0' '/nix/store/zgpg0rpja7yigp16i9gjdg6q098q0yv5-network-uri-2.6.4.2' '/nix/store/br5gp7r3f82132pra7lx4q5kcp426ncz-th-compat-0.1.4' '/nix/store/hfcbv0img8ycqp022zi0dmpj78cdw3hv-tar-0.5.1.1' '/nix/store/8ncah41jiqk3zy9a77vsk2iqdk84jwx8-zlib-0.6.3.0' '/nix/store/f21k0bwhd41ab2rm2pl4yds7c940gsas-HTTP-4000.4.1' '/nix/store/i4b0nk9k8j1qvszgnrqfxjbcqbzmhn8r-regex-base-0.94.0.2' '/nix/store/nb4wmpnkd7zb1xy4aac026wfyi197wzp-regex-posix-0.96.0.1' '/nix/store/dmmyw25lnx6asdibfa56k6drwjx8w06y-resolv-0.2.0.2' '/nix/store/5swi9pa81pk3ljym54wvp92rnb4lrn20-safe-exceptions-0.1.7.4' '/nix/store/x93xzs054hydmhjhx94w0dwq3iw0ydnj-nixpkgs-fmt-1.3.0' )
declare -a pkgsTargetTarget=()
declare -a postFixupHooks=('_makeSymlinksRelativeInAllOutputs' '_multioutPropagateDev' )
declare -a postUnpackHooks=('_updateSourceDateEpochFromSourceRoot' )
declare -a preConfigureHooks=('_multioutConfig' )
preConfigurePhases=' updateAutotoolsGnuConfigScriptsPhase'
declare -a preFixupHooks=('_moveToShare' '_multioutDocs' '_multioutDevs' )
prefix='/home/jonathan/Documents/horizon-haskell-plutus-test/outputs/out'
declare -a propagatedBuildDepFiles=('propagated-build-build-deps' 'propagated-native-build-inputs' 'propagated-build-target-deps' )
propagatedBuildInputs=''
export propagatedBuildInputs
declare -a propagatedHostDepFiles=('propagated-host-host-deps' 'propagated-build-inputs' )
propagatedNativeBuildInputs=''
export propagatedNativeBuildInputs
declare -a propagatedTargetDepFiles=('propagated-target-target-deps' )
shell='/nix/store/xdqlrixlspkks50m9b0mpvag65m3pf2w-bash-5.2-p15/bin/bash'
export shell
shellHook=''
export shellHook
stdenv='/nix/store/3pfjacvdg9f491lfqc9qb2d0nknx73fb-stdenv-linux'
export stdenv
strictDeps=''
export strictDeps
system='x86_64-linux'
export system
declare -a unpackCmdHooks=('_defaultUnpack' )
_accumFlagsArray ()
{
 
    local name;
    if [ -n "$__structuredAttrs" ]; then
        for name in "$@";
        do
            local -n nameref="$name";
            flagsArray+=(${nameref+"${nameref[@]}"});
        done;
    else
        for name in "$@";
        do
            local -n nameref="$name";
            case "$name" in 
                *Array)
                    flagsArray+=(${nameref+"${nameref[@]}"})
                ;;
                *)
                    flagsArray+=(${nameref-})
                ;;
            esac;
        done;
    fi
}
_activatePkgs ()
{
 
    local hostOffset targetOffset;
    local pkg;
    for hostOffset in "${allPlatOffsets[@]}";
    do
        local pkgsVar="${pkgAccumVarVars[hostOffset + 1]}";
        for targetOffset in "${allPlatOffsets[@]}";
        do
            (( hostOffset <= targetOffset )) || continue;
            local pkgsRef="${pkgsVar}[$targetOffset - $hostOffset]";
            local pkgsSlice="${!pkgsRef}[@]";
            for pkg in ${!pkgsSlice+"${!pkgsSlice}"};
            do
                activatePackage "$pkg" "$hostOffset" "$targetOffset";
            done;
        done;
    done
}
_addRpathPrefix ()
{
 
    if [ "${NIX_NO_SELF_RPATH:-0}" != 1 ]; then
        export NIX_LDFLAGS="-rpath $1/lib ${NIX_LDFLAGS-}";
    fi
}
_addToEnv ()
{
 
    local depHostOffset depTargetOffset;
    local pkg;
    for depHostOffset in "${allPlatOffsets[@]}";
    do
        local hookVar="${pkgHookVarVars[depHostOffset + 1]}";
        local pkgsVar="${pkgAccumVarVars[depHostOffset + 1]}";
        for depTargetOffset in "${allPlatOffsets[@]}";
        do
            (( depHostOffset <= depTargetOffset )) || continue;
            local hookRef="${hookVar}[$depTargetOffset - $depHostOffset]";
            if [[ -z "${strictDeps-}" ]]; then
                local visitedPkgs="";
                for pkg in "${pkgsBuildBuild[@]}" "${pkgsBuildHost[@]}" "${pkgsBuildTarget[@]}" "${pkgsHostHost[@]}" "${pkgsHostTarget[@]}" "${pkgsTargetTarget[@]}";
                do
                    if [[ "$visitedPkgs" = *"$pkg"* ]]; then
                        continue;
                    fi;
                    runHook "${!hookRef}" "$pkg";
                    visitedPkgs+=" $pkg";
                done;
            else
                local pkgsRef="${pkgsVar}[$depTargetOffset - $depHostOffset]";
                local pkgsSlice="${!pkgsRef}[@]";
                for pkg in ${!pkgsSlice+"${!pkgsSlice}"};
                do
                    runHook "${!hookRef}" "$pkg";
                done;
            fi;
        done;
    done
}
_allFlags ()
{
 
    export system pname name version;
    for varName in $(awk 'BEGIN { for (v in ENVIRON) if (v ~ /^[a-z][a-zA-Z0-9_]*$/) print v }');
    do
        if (( "${NIX_DEBUG:-0}" >= 1 )); then
            printf "@%s@ -> %q\n" "${varName}" "${!varName}" 1>&2;
        fi;
        args+=("--subst-var" "$varName");
    done
}
_assignFirst ()
{
 
    local varName="$1";
    local _var;
    local REMOVE=REMOVE;
    shift;
    for _var in "$@";
    do
        if [ -n "${!_var-}" ]; then
            eval "${varName}"="${_var}";
            return;
        fi;
    done;
    echo;
    echo "error: _assignFirst: could not find a non-empty variable whose name to assign to ${varName}.";
    echo "       The following variables were all unset or empty:";
    echo "           $*";
    if [ -z "${out:-}" ]; then
        echo '       If you do not want an "out" output in your derivation, make sure to define';
        echo '       the other specific required outputs. This can be achieved by picking one';
        echo "       of the above as an output.";
        echo '       You do not have to remove "out" if you want to have a different default';
        echo '       output, because the first output is taken as a default.';
        echo;
    fi;
    return 1
}
_callImplicitHook ()
{
 
    local def="$1";
    local hookName="$2";
    if declare -F "$hookName" > /dev/null; then
        "$hookName";
    else
        if type -p "$hookName" > /dev/null; then
            source "$hookName";
        else
            if [ -n "${!hookName:-}" ]; then
                eval "${!hookName}";
            else
                return "$def";
            fi;
        fi;
    fi
}
_defaultUnpack ()
{
 
    local fn="$1";
    local destination;
    if [ -d "$fn" ]; then
        destination="$(stripHash "$fn")";
        if [ -e "$destination" ]; then
            echo "Cannot copy $fn to $destination: destination already exists!";
            echo "Did you specify two \"srcs\" with the same \"name\"?";
            return 1;
        fi;
        cp -pr --reflink=auto -- "$fn" "$destination";
    else
        case "$fn" in 
            *.tar.xz | *.tar.lzma | *.txz)
                xz -d < "$fn" | tar xf - --warning=no-timestamp
            ;;
            *.tar | *.tar.* | *.tgz | *.tbz2 | *.tbz)
                tar xf "$fn" --warning=no-timestamp
            ;;
            *)
                return 1
            ;;
        esac;
    fi
}
_doStrip ()
{
 
    local -ra flags=(dontStripHost dontStripTarget);
    local -ra debugDirs=(stripDebugList stripDebugListTarget);
    local -ra allDirs=(stripAllList stripAllListTarget);
    local -ra stripCmds=(STRIP STRIP_FOR_TARGET);
    local -ra ranlibCmds=(RANLIB RANLIB_FOR_TARGET);
    stripDebugList=${stripDebugList[*]:-lib lib32 lib64 libexec bin sbin};
    stripDebugListTarget=${stripDebugListTarget[*]:-};
    stripAllList=${stripAllList[*]:-};
    stripAllListTarget=${stripAllListTarget[*]:-};
    local i;
    for i in ${!stripCmds[@]};
    do
        local -n flag="${flags[$i]}";
        local -n debugDirList="${debugDirs[$i]}";
        local -n allDirList="${allDirs[$i]}";
        local -n stripCmd="${stripCmds[$i]}";
        local -n ranlibCmd="${ranlibCmds[$i]}";
        if [[ -n "${dontStrip-}" || -n "${flag-}" ]] || ! type -f "${stripCmd-}" 2> /dev/null 1>&2; then
            continue;
        fi;
        stripDirs "$stripCmd" "$ranlibCmd" "$debugDirList" "${stripDebugFlags[*]:--S -p}";
        stripDirs "$stripCmd" "$ranlibCmd" "$allDirList" "${stripAllFlags[*]:--s -p}";
    done
}
_eval ()
{
 
    if declare -F "$1" > /dev/null 2>&1; then
        "$@";
    else
        eval "$1";
    fi
}
_makeSymlinksRelative ()
{
 
    local symlinkTarget;
    if [ "${dontRewriteSymlinks-}" ] || [ ! -e "$prefix" ]; then
        return;
    fi;
    while IFS= read -r -d '' f; do
        symlinkTarget=$(readlink "$f");
        if [[ "$symlinkTarget"/ != "$prefix"/* ]]; then
            continue;
        fi;
        if [ ! -e "$symlinkTarget" ]; then
            echo "the symlink $f is broken, it points to $symlinkTarget (which is missing)";
        fi;
        echo "rewriting symlink $f to be relative to $prefix";
        ln -snrf "$symlinkTarget" "$f";
    done < <(find $prefix -type l -print0)
}
_makeSymlinksRelativeInAllOutputs ()
{
 
    local output;
    for output in $(getAllOutputNames);
    do
        prefix="${!output}" _makeSymlinksRelative;
    done
}
_moveLib64 ()
{
 
    if [ "${dontMoveLib64-}" = 1 ]; then
        return;
    fi;
    if [ ! -e "$prefix/lib64" -o -L "$prefix/lib64" ]; then
        return;
    fi;
    echo "moving $prefix/lib64/* to $prefix/lib";
    mkdir -p $prefix/lib;
    shopt -s dotglob;
    for i in $prefix/lib64/*;
    do
        mv --no-clobber "$i" $prefix/lib;
    done;
    shopt -u dotglob;
    rmdir $prefix/lib64;
    ln -s lib $prefix/lib64
}
_moveSbin ()
{
 
    if [ "${dontMoveSbin-}" = 1 ]; then
        return;
    fi;
    if [ ! -e "$prefix/sbin" -o -L "$prefix/sbin" ]; then
        return;
    fi;
    echo "moving $prefix/sbin/* to $prefix/bin";
    mkdir -p $prefix/bin;
    shopt -s dotglob;
    for i in $prefix/sbin/*;
    do
        mv "$i" $prefix/bin;
    done;
    shopt -u dotglob;
    rmdir $prefix/sbin;
    ln -s bin $prefix/sbin
}
_moveSystemdUserUnits ()
{
 
    if [ "${dontMoveSystemdUserUnits:-0}" = 1 ]; then
        return;
    fi;
    if [ ! -e "${prefix:?}/lib/systemd/user" ]; then
        return;
    fi;
    local source="$prefix/lib/systemd/user";
    local target="$prefix/share/systemd/user";
    echo "moving $source/* to $target";
    mkdir -p "$target";
    ( shopt -s dotglob;
    for i in "$source"/*;
    do
        mv "$i" "$target";
    done );
    rmdir "$source";
    ln -s "$target" "$source"
}
_moveToShare ()
{
 
    if [ -n "$__structuredAttrs" ]; then
        if [ -z "${forceShare-}" ]; then
            forceShare=(man doc info);
        fi;
    else
        forceShare=(${forceShare:-man doc info});
    fi;
    if [[ -z "$out" ]]; then
        return;
    fi;
    for d in "${forceShare[@]}";
    do
        if [ -d "$out/$d" ]; then
            if [ -d "$out/share/$d" ]; then
                echo "both $d/ and share/$d/ exist!";
            else
                echo "moving $out/$d to $out/share/$d";
                mkdir -p $out/share;
                mv $out/$d $out/share/;
            fi;
        fi;
    done
}
_multioutConfig ()
{
 
    if [ "$(getAllOutputNames)" = "out" ] || [ -z "${setOutputFlags-1}" ]; then
        return;
    fi;
    if [ -z "${shareDocName:-}" ]; then
        local confScript="${configureScript:-}";
        if [ -z "$confScript" ] && [ -x ./configure ]; then
            confScript=./configure;
        fi;
        if [ -f "$confScript" ]; then
            local shareDocName="$(sed -n "s/^PACKAGE_TARNAME='\(.*\)'$/\1/p" < "$confScript")";
        fi;
        if [ -z "$shareDocName" ] || echo "$shareDocName" | grep -q '[^a-zA-Z0-9_-]'; then
            shareDocName="$(echo "$name" | sed 's/-[^a-zA-Z].*//')";
        fi;
    fi;
    prependToVar configureFlags --bindir="${!outputBin}"/bin --sbindir="${!outputBin}"/sbin --includedir="${!outputInclude}"/include --oldincludedir="${!outputInclude}"/include --mandir="${!outputMan}"/share/man --infodir="${!outputInfo}"/share/info --docdir="${!outputDoc}"/share/doc/"${shareDocName}" --libdir="${!outputLib}"/lib --libexecdir="${!outputLib}"/libexec --localedir="${!outputLib}"/share/locale;
    prependToVar installFlags pkgconfigdir="${!outputDev}"/lib/pkgconfig m4datadir="${!outputDev}"/share/aclocal aclocaldir="${!outputDev}"/share/aclocal
}
_multioutDevs ()
{
 
    if [ "$(getAllOutputNames)" = "out" ] || [ -z "${moveToDev-1}" ]; then
        return;
    fi;
    moveToOutput include "${!outputInclude}";
    moveToOutput lib/pkgconfig "${!outputDev}";
    moveToOutput share/pkgconfig "${!outputDev}";
    moveToOutput lib/cmake "${!outputDev}";
    moveToOutput share/aclocal "${!outputDev}";
    for f in "${!outputDev}"/{lib,share}/pkgconfig/*.pc;
    do
        echo "Patching '$f' includedir to output ${!outputInclude}";
        sed -i "/^includedir=/s,=\${prefix},=${!outputInclude}," "$f";
    done
}
_multioutDocs ()
{
 
    local REMOVE=REMOVE;
    moveToOutput share/info "${!outputInfo}";
    moveToOutput share/doc "${!outputDoc}";
    moveToOutput share/gtk-doc "${!outputDevdoc}";
    moveToOutput share/devhelp/books "${!outputDevdoc}";
    moveToOutput share/man "${!outputMan}";
    moveToOutput share/man/man3 "${!outputDevman}"
}
_multioutPropagateDev ()
{
 
    if [ "$(getAllOutputNames)" = "out" ]; then
        return;
    fi;
    local outputFirst;
    for outputFirst in $(getAllOutputNames);
    do
        break;
    done;
    local propagaterOutput="$outputDev";
    if [ -z "$propagaterOutput" ]; then
        propagaterOutput="$outputFirst";
    fi;
    if [ -z "${propagatedBuildOutputs+1}" ]; then
        local po_dirty="$outputBin $outputInclude $outputLib";
        set +o pipefail;
        propagatedBuildOutputs=`echo "$po_dirty"             | tr -s ' ' '\n' | grep -v -F "$propagaterOutput"             | sort -u | tr '\n' ' ' `;
        set -o pipefail;
    fi;
    if [ -z "$propagatedBuildOutputs" ]; then
        return;
    fi;
    mkdir -p "${!propagaterOutput}"/nix-support;
    for output in $propagatedBuildOutputs;
    do
        echo -n " ${!output}" >> "${!propagaterOutput}"/nix-support/propagated-build-inputs;
    done
}
_overrideFirst ()
{
 
    if [ -z "${!1-}" ]; then
        _assignFirst "$@";
    fi
}
_pruneLibtoolFiles ()
{
 
    if [ "${dontPruneLibtoolFiles-}" ] || [ ! -e "$prefix" ]; then
        return;
    fi;
    find "$prefix" -type f -name '*.la' -exec grep -q '^# Generated by .*libtool' {} \; -exec grep -q "^old_library=''" {} \; -exec sed -i {} -e "/^dependency_libs='[^']/ c dependency_libs='' #pruned" \;
}
_updateSourceDateEpochFromSourceRoot ()
{
 
    if [ -n "$sourceRoot" ]; then
        updateSourceDateEpoch "$sourceRoot";
    fi
}
activatePackage ()
{
 
    local pkg="$1";
    local -r hostOffset="$2";
    local -r targetOffset="$3";
    (( hostOffset <= targetOffset )) || exit 1;
    if [ -f "$pkg" ]; then
        source "$pkg";
    fi;
    if [[ -z "${strictDeps-}" || "$hostOffset" -le -1 ]]; then
        addToSearchPath _PATH "$pkg/bin";
    fi;
    if (( hostOffset <= -1 )); then
        addToSearchPath _XDG_DATA_DIRS "$pkg/share";
    fi;
    if [[ "$hostOffset" -eq 0 && -d "$pkg/bin" ]]; then
        addToSearchPath _HOST_PATH "$pkg/bin";
    fi;
    if [[ -f "$pkg/nix-support/setup-hook" ]]; then
        source "$pkg/nix-support/setup-hook";
    fi
}
addEnvHooks ()
{
 
    local depHostOffset="$1";
    shift;
    local pkgHookVarsSlice="${pkgHookVarVars[$depHostOffset + 1]}[@]";
    local pkgHookVar;
    for pkgHookVar in "${!pkgHookVarsSlice}";
    do
        eval "${pkgHookVar}s"'+=("$@")';
    done
}
addToSearchPath ()
{
 
    addToSearchPathWithCustomDelimiter ":" "$@"
}
addToSearchPathWithCustomDelimiter ()
{
 
    local delimiter="$1";
    local varName="$2";
    local dir="$3";
    if [[ -d "$dir" && "${!varName:+${delimiter}${!varName}${delimiter}}" != *"${delimiter}${dir}${delimiter}"* ]]; then
        export "${varName}=${!varName:+${!varName}${delimiter}}${dir}";
    fi
}
appendToVar ()
{
 
    local -n nameref="$1";
    local useArray type;
    if [ -n "$__structuredAttrs" ]; then
        useArray=true;
    else
        useArray=false;
    fi;
    if declare -p "$1" 2> /dev/null | grep -q '^'; then
        type="$(declare -p "$1")";
        if [[ "$type" =~ "declare -A" ]]; then
            echo "appendToVar(): ERROR: trying to use appendToVar on an associative array, use variable+=([\"X\"]=\"Y\") instead." 1>&2;
            return 1;
        else
            if [[ "$type" =~ "declare -a" ]]; then
                useArray=true;
            else
                useArray=false;
            fi;
        fi;
    fi;
    shift;
    if $useArray; then
        nameref=(${nameref+"${nameref[@]}"} "$@");
    else
        nameref="${nameref-} $*";
    fi
}
auditTmpdir ()
{
 
    local dir="$1";
    [ -e "$dir" ] || return 0;
    echo "checking for references to $TMPDIR/ in $dir...";
    local i;
    find "$dir" -type f -print0 | while IFS= read -r -d '' i; do
        if [[ "$i" =~ .build-id ]]; then
            continue;
        fi;
        if isELF "$i"; then
            if { 
                printf :;
                patchelf --print-rpath "$i"
            } | grep -q -F ":$TMPDIR/"; then
                echo "RPATH of binary $i contains a forbidden reference to $TMPDIR/";
                exit 1;
            fi;
        fi;
        if isScript "$i"; then
            if [ -e "$(dirname "$i")/.$(basename "$i")-wrapped" ]; then
                if grep -q -F "$TMPDIR/" "$i"; then
                    echo "wrapper script $i contains a forbidden reference to $TMPDIR/";
                    exit 1;
                fi;
            fi;
        fi;
    done
}
bintoolsWrapper_addLDVars ()
{
 
    local role_post;
    getHostRoleEnvHook;
    if [[ -d "$1/lib64" && ! -L "$1/lib64" ]]; then
        export NIX_LDFLAGS${role_post}+=" -L$1/lib64";
    fi;
    if [[ -d "$1/lib" ]]; then
        local -a glob=($1/lib/lib*);
        if [ "${#glob[*]}" -gt 0 ]; then
            export NIX_LDFLAGS${role_post}+=" -L$1/lib";
        fi;
    fi
}
buildPhase ()
{
 
    runHook preBuild;
    if [[ -z "${makeFlags-}" && -z "${makefile:-}" && ! ( -e Makefile || -e makefile || -e GNUmakefile ) ]]; then
        echo "no Makefile or custom buildPhase, doing nothing";
    else
        foundMakefile=1;
        local flagsArray=(${enableParallelBuilding:+-j${NIX_BUILD_CORES}} SHELL=$SHELL);
        _accumFlagsArray makeFlags makeFlagsArray buildFlags buildFlagsArray;
        echoCmd 'build flags' "${flagsArray[@]}";
        make ${makefile:+-f $makefile} "${flagsArray[@]}";
        unset flagsArray;
    fi;
    runHook postBuild
}
ccWrapper_addCVars ()
{
 
    local role_post;
    getHostRoleEnvHook;
    if [ -d "$1/include" ]; then
        export NIX_CFLAGS_COMPILE${role_post}+=" -isystem $1/include";
    fi;
    if [ -d "$1/Library/Frameworks" ]; then
        export NIX_CFLAGS_COMPILE${role_post}+=" -iframework $1/Library/Frameworks";
    fi
}
checkPhase ()
{
 
    runHook preCheck;
    if [[ -z "${foundMakefile:-}" ]]; then
        echo "no Makefile or custom checkPhase, doing nothing";
        runHook postCheck;
        return;
    fi;
    if [[ -z "${checkTarget:-}" ]]; then
        if make -n ${makefile:+-f $makefile} check > /dev/null 2>&1; then
            checkTarget=check;
        else
            if make -n ${makefile:+-f $makefile} test > /dev/null 2>&1; then
                checkTarget=test;
            fi;
        fi;
    fi;
    if [[ -z "${checkTarget:-}" ]]; then
        echo "no check/test target in ${makefile:-Makefile}, doing nothing";
    else
        local flagsArray=(${enableParallelChecking:+-j${NIX_BUILD_CORES}} SHELL=$SHELL);
        _accumFlagsArray makeFlags makeFlagsArray;
        if [ -n "$__structuredAttrs" ]; then
            flagsArray+=("${checkFlags[@]:-VERBOSE=y}");
        else
            flagsArray+=(${checkFlags:-VERBOSE=y});
        fi;
        _accumFlagsArray checkFlagsArray;
        flagsArray+=(${checkTarget});
        echoCmd 'check flags' "${flagsArray[@]}";
        make ${makefile:+-f $makefile} "${flagsArray[@]}";
        unset flagsArray;
    fi;
    runHook postCheck
}
compressManPages ()
{
 
    local dir="$1";
    if [ -L "$dir"/share ] || [ -L "$dir"/share/man ] || [ ! -d "$dir/share/man" ]; then
        return;
    fi;
    echo "gzipping man pages under $dir/share/man/";
    find "$dir"/share/man/ -type f -a '!' -regex '.*\.\(bz2\|gz\|xz\)$' -print0 | while IFS= read -r -d '' f; do
        if gzip -c -n "$f" > "$f".gz; then
            rm "$f";
        else
            rm "$f".gz;
        fi;
    done;
    find "$dir"/share/man/ -type l -a '!' -regex '.*\.\(bz2\|gz\|xz\)$' -print0 | sort -z | while IFS= read -r -d '' f; do
        local target;
        target="$(readlink -f "$f")";
        if [ -f "$target".gz ]; then
            ln -sf "$target".gz "$f".gz && rm "$f";
        fi;
    done
}
configurePhase ()
{
 
    runHook preConfigure;
    : "${configureScript=}";
    if [[ -z "$configureScript" && -x ./configure ]]; then
        configureScript=./configure;
    fi;
    if [ -z "${dontFixLibtool:-}" ]; then
        export lt_cv_deplibs_check_method="${lt_cv_deplibs_check_method-pass_all}";
        local i;
        find . -iname "ltmain.sh" -print0 | while IFS='' read -r -d '' i; do
            echo "fixing libtool script $i";
            fixLibtool "$i";
        done;
        CONFIGURE_MTIME_REFERENCE=$(mktemp configure.mtime.reference.XXXXXX);
        find . -executable -type f -name configure -exec grep -l 'GNU Libtool is free software; you can redistribute it and/or modify' {} \; -exec touch -r {} "$CONFIGURE_MTIME_REFERENCE" \; -exec sed -i s_/usr/bin/file_file_g {} \; -exec touch -r "$CONFIGURE_MTIME_REFERENCE" {} \;;
        rm -f "$CONFIGURE_MTIME_REFERENCE";
    fi;
    if [[ -z "${dontAddPrefix:-}" && -n "$prefix" ]]; then
        prependToVar configureFlags "${prefixKey:---prefix=}$prefix";
    fi;
    if [[ -f "$configureScript" ]]; then
        if [ -z "${dontAddDisableDepTrack:-}" ]; then
            if grep -q dependency-tracking "$configureScript"; then
                prependToVar configureFlags --disable-dependency-tracking;
            fi;
        fi;
        if [ -z "${dontDisableStatic:-}" ]; then
            if grep -q enable-static "$configureScript"; then
                prependToVar configureFlags --disable-static;
            fi;
        fi;
    fi;
    if [ -n "$configureScript" ]; then
        local -a flagsArray;
        _accumFlagsArray configureFlags configureFlagsArray;
        echoCmd 'configure flags' "${flagsArray[@]}";
        $configureScript "${flagsArray[@]}";
        unset flagsArray;
    else
        echo "no configure script, doing nothing";
    fi;
    runHook postConfigure
}
consumeEntire ()
{
 
    if IFS='' read -r -d '' "$1"; then
        echo "consumeEntire(): ERROR: Input null bytes, won't process" 1>&2;
        return 1;
    fi
}
distPhase ()
{
 
    runHook preDist;
    local flagsArray=();
    _accumFlagsArray distFlags distFlagsArray;
    flagsArray+=(${distTarget:-dist});
    echo 'dist flags: %q' "${flagsArray[@]}";
    make ${makefile:+-f $makefile} "${flagsArray[@]}";
    if [ "${dontCopyDist:-0}" != 1 ]; then
        mkdir -p "$out/tarballs";
        cp -pvd ${tarballs[*]:-*.tar.gz} "$out/tarballs";
    fi;
    runHook postDist
}
dumpVars ()
{
 
    if [ "${noDumpEnvVars:-0}" != 1 ]; then
        export 2> /dev/null >| "$NIX_BUILD_TOP/env-vars" || true;
    fi
}
echoCmd ()
{
 
    printf "%s:" "$1";
    shift;
    printf ' %q' "$@";
    echo
}
exitHandler ()
{
 
    exitCode="$?";
    set +e;
    if [ -n "${showBuildStats:-}" ]; then
        read -r -d '' -a buildTimes < <(times);
        echo "build times:";
        echo "user time for the shell             ${buildTimes[0]}";
        echo "system time for the shell           ${buildTimes[1]}";
        echo "user time for all child processes   ${buildTimes[2]}";
        echo "system time for all child processes ${buildTimes[3]}";
    fi;
    if (( "$exitCode" != 0 )); then
        runHook failureHook;
        if [ -n "${succeedOnFailure:-}" ]; then
            echo "build failed with exit code $exitCode (ignored)";
            mkdir -p "$out/nix-support";
            printf "%s" "$exitCode" > "$out/nix-support/failed";
            exit 0;
        fi;
    else
        runHook exitHook;
    fi;
    return "$exitCode"
}
findInputs ()
{
 
    local -r pkg="$1";
    local -r hostOffset="$2";
    local -r targetOffset="$3";
    (( hostOffset <= targetOffset )) || exit 1;
    local varVar="${pkgAccumVarVars[hostOffset + 1]}";
    local varRef="$varVar[$((targetOffset - hostOffset))]";
    local var="${!varRef}";
    unset -v varVar varRef;
    local varSlice="$var[*]";
    case "${!varSlice-}" in 
        *" $pkg "*)
            return 0
        ;;
    esac;
    unset -v varSlice;
    eval "$var"'+=("$pkg")';
    if ! [ -e "$pkg" ]; then
        echo "build input $pkg does not exist" 1>&2;
        exit 1;
    fi;
    function mapOffset () 
    { 
        local -r inputOffset="$1";
        local -n outputOffset="$2";
        if (( inputOffset <= 0 )); then
            outputOffset=$((inputOffset + hostOffset));
        else
            outputOffset=$((inputOffset - 1 + targetOffset));
        fi
    };
    local relHostOffset;
    for relHostOffset in "${allPlatOffsets[@]}";
    do
        local files="${propagatedDepFilesVars[relHostOffset + 1]}";
        local hostOffsetNext;
        mapOffset "$relHostOffset" hostOffsetNext;
        (( -1 <= hostOffsetNext && hostOffsetNext <= 1 )) || continue;
        local relTargetOffset;
        for relTargetOffset in "${allPlatOffsets[@]}";
        do
            (( "$relHostOffset" <= "$relTargetOffset" )) || continue;
            local fileRef="${files}[$relTargetOffset - $relHostOffset]";
            local file="${!fileRef}";
            unset -v fileRef;
            local targetOffsetNext;
            mapOffset "$relTargetOffset" targetOffsetNext;
            (( -1 <= hostOffsetNext && hostOffsetNext <= 1 )) || continue;
            [[ -f "$pkg/nix-support/$file" ]] || continue;
            local pkgNext;
            read -r -d '' pkgNext < "$pkg/nix-support/$file" || true;
            for pkgNext in $pkgNext;
            do
                findInputs "$pkgNext" "$hostOffsetNext" "$targetOffsetNext";
            done;
        done;
    done
}
fixLibtool ()
{
 
    local search_path;
    for flag in $NIX_LDFLAGS;
    do
        case $flag in 
            -L*)
                search_path+=" ${flag#-L}"
            ;;
        esac;
    done;
    sed -i "$1" -e "s^eval \(sys_lib_search_path=\).*^\1'${search_path:-}'^" -e 's^eval sys_lib_.+search_path=.*^^'
}
fixupPhase ()
{
 
    local output;
    for output in $(getAllOutputNames);
    do
        if [ -e "${!output}" ]; then
            chmod -R u+w "${!output}";
        fi;
    done;
    runHook preFixup;
    local output;
    for output in $(getAllOutputNames);
    do
        prefix="${!output}" runHook fixupOutput;
    done;
    recordPropagatedDependencies;
    if [ -n "${setupHook:-}" ]; then
        mkdir -p "${!outputDev}/nix-support";
        substituteAll "$setupHook" "${!outputDev}/nix-support/setup-hook";
    fi;
    if [ -n "${setupHooks:-}" ]; then
        mkdir -p "${!outputDev}/nix-support";
        local hook;
        for hook in ${setupHooks[@]};
        do
            local content;
            consumeEntire content < "$hook";
            substituteAllStream content "file '$hook'" >> "${!outputDev}/nix-support/setup-hook";
            unset -v content;
        done;
        unset -v hook;
    fi;
    if [ -n "${propagatedUserEnvPkgs:-}" ]; then
        mkdir -p "${!outputBin}/nix-support";
        printWords $propagatedUserEnvPkgs > "${!outputBin}/nix-support/propagated-user-env-packages";
    fi;
    runHook postFixup
}
genericBuild ()
{
 
    export GZIP_NO_TIMESTAMPS=1;
    if [ -f "${buildCommandPath:-}" ]; then
        source "$buildCommandPath";
        return;
    fi;
    if [ -n "${buildCommand:-}" ]; then
        eval "$buildCommand";
        return;
    fi;
    if [ -z "${phases[*]:-}" ]; then
        phases="${prePhases[*]:-} unpackPhase patchPhase ${preConfigurePhases[*]:-}             configurePhase ${preBuildPhases[*]:-} buildPhase checkPhase             ${preInstallPhases[*]:-} installPhase ${preFixupPhases[*]:-} fixupPhase installCheckPhase             ${preDistPhases[*]:-} distPhase ${postPhases[*]:-}";
    fi;
    for curPhase in ${phases[*]};
    do
        if [[ "$curPhase" = unpackPhase && -n "${dontUnpack:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = patchPhase && -n "${dontPatch:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = configurePhase && -n "${dontConfigure:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = buildPhase && -n "${dontBuild:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = checkPhase && -z "${doCheck:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = installPhase && -n "${dontInstall:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = fixupPhase && -n "${dontFixup:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = installCheckPhase && -z "${doInstallCheck:-}" ]]; then
            continue;
        fi;
        if [[ "$curPhase" = distPhase && -z "${doDist:-}" ]]; then
            continue;
        fi;
        if [[ -n $NIX_LOG_FD ]]; then
            echo "@nix { \"action\": \"setPhase\", \"phase\": \"$curPhase\" }" >&"$NIX_LOG_FD";
        fi;
        showPhaseHeader "$curPhase";
        dumpVars;
        local startTime=$(date +"%s");
        eval "${!curPhase:-$curPhase}";
        local endTime=$(date +"%s");
        showPhaseFooter "$curPhase" "$startTime" "$endTime";
        if [ "$curPhase" = unpackPhase ]; then
            [ -n "${sourceRoot:-}" ] && chmod +x "${sourceRoot}";
            cd "${sourceRoot:-.}";
        fi;
    done
}
getAllOutputNames ()
{
 
    if [ -n "$__structuredAttrs" ]; then
        echo "${!outputs[*]}";
    else
        echo "$outputs";
    fi
}
getHostRole ()
{
 
    getRole "$hostOffset"
}
getHostRoleEnvHook ()
{
 
    getRole "$depHostOffset"
}
getRole ()
{
 
    case $1 in 
        -1)
            role_post='_FOR_BUILD'
        ;;
        0)
            role_post=''
        ;;
        1)
            role_post='_FOR_TARGET'
        ;;
        *)
            echo "binutils-wrapper-2.40: used as improper sort of dependency" 1>&2;
            return 1
        ;;
    esac
}
getTargetRole ()
{
 
    getRole "$targetOffset"
}
getTargetRoleEnvHook ()
{
 
    getRole "$depTargetOffset"
}
getTargetRoleWrapper ()
{
 
    case $targetOffset in 
        -1)
            export NIX_BINTOOLS_WRAPPER_TARGET_BUILD_x86_64_unknown_linux_gnu=1
        ;;
        0)
            export NIX_BINTOOLS_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu=1
        ;;
        1)
            export NIX_BINTOOLS_WRAPPER_TARGET_TARGET_x86_64_unknown_linux_gnu=1
        ;;
        *)
            echo "binutils-wrapper-2.40: used as improper sort of dependency" 1>&2;
            return 1
        ;;
    esac
}
installCheckPhase ()
{
 
    runHook preInstallCheck;
    if [[ -z "${foundMakefile:-}" ]]; then
        echo "no Makefile or custom installCheckPhase, doing nothing";
    else
        if [[ -z "${installCheckTarget:-}" ]] && ! make -n ${makefile:+-f $makefile} "${installCheckTarget:-installcheck}" > /dev/null 2>&1; then
            echo "no installcheck target in ${makefile:-Makefile}, doing nothing";
        else
            local flagsArray=(${enableParallelChecking:+-j${NIX_BUILD_CORES}} SHELL=$SHELL);
            _accumFlagsArray makeFlags makeFlagsArray installCheckFlags installCheckFlagsArray;
            flagsArray+=(${installCheckTarget:-installcheck});
            echoCmd 'installcheck flags' "${flagsArray[@]}";
            make ${makefile:+-f $makefile} "${flagsArray[@]}";
            unset flagsArray;
        fi;
    fi;
    runHook postInstallCheck
}
installPhase ()
{
 
    runHook preInstall;
    if [[ -z "${makeFlags-}" && -z "${makefile:-}" && ! ( -e Makefile || -e makefile || -e GNUmakefile ) ]]; then
        echo "no Makefile or custom installPhase, doing nothing";
        runHook postInstall;
        return;
    else
        foundMakefile=1;
    fi;
    if [ -n "$prefix" ]; then
        mkdir -p "$prefix";
    fi;
    local flagsArray=(${enableParallelInstalling:+-j${NIX_BUILD_CORES}} SHELL=$SHELL);
    _accumFlagsArray makeFlags makeFlagsArray installFlags installFlagsArray;
    if [ -n "$__structuredAttrs" ]; then
        flagsArray+=("${installTargets[@]:-install}");
    else
        flagsArray+=(${installTargets:-install});
    fi;
    echoCmd 'install flags' "${flagsArray[@]}";
    make ${makefile:+-f $makefile} "${flagsArray[@]}";
    unset flagsArray;
    runHook postInstall
}
isELF ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 4 -u "$fd" magic;
    exec {fd}>&-;
    if [ "$magic" = 'ELF' ]; then
        return 0;
    else
        return 1;
    fi
}
isMachO ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 4 -u "$fd" magic;
    exec {fd}>&-;
    if [[ "$magic" = $(echo -ne "\xfe\xed\xfa\xcf") || "$magic" = $(echo -ne "\xcf\xfa\xed\xfe") ]]; then
        return 0;
    else
        if [[ "$magic" = $(echo -ne "\xfe\xed\xfa\xce") || "$magic" = $(echo -ne "\xce\xfa\xed\xfe") ]]; then
            return 0;
        else
            if [[ "$magic" = $(echo -ne "\xca\xfe\xba\xbe") || "$magic" = $(echo -ne "\xbe\xba\xfe\xca") ]]; then
                return 0;
            else
                return 1;
            fi;
        fi;
    fi
}
isScript ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 2 -u "$fd" magic;
    exec {fd}>&-;
    if [[ "$magic" =~ \#! ]]; then
        return 0;
    else
        return 1;
    fi
}
mapOffset ()
{
 
    local -r inputOffset="$1";
    local -n outputOffset="$2";
    if (( inputOffset <= 0 )); then
        outputOffset=$((inputOffset + hostOffset));
    else
        outputOffset=$((inputOffset - 1 + targetOffset));
    fi
}
moveToOutput ()
{
 
    local patt="$1";
    local dstOut="$2";
    local output;
    for output in $(getAllOutputNames);
    do
        if [ "${!output}" = "$dstOut" ]; then
            continue;
        fi;
        local srcPath;
        for srcPath in "${!output}"/$patt;
        do
            if [ ! -e "$srcPath" ] && [ ! -L "$srcPath" ]; then
                continue;
            fi;
            if [ "$dstOut" = REMOVE ]; then
                echo "Removing $srcPath";
                rm -r "$srcPath";
            else
                local dstPath="$dstOut${srcPath#${!output}}";
                echo "Moving $srcPath to $dstPath";
                if [ -d "$dstPath" ] && [ -d "$srcPath" ]; then
                    rmdir "$srcPath" --ignore-fail-on-non-empty;
                    if [ -d "$srcPath" ]; then
                        mv -t "$dstPath" "$srcPath"/*;
                        rmdir "$srcPath";
                    fi;
                else
                    mkdir -p "$(readlink -m "$dstPath/..")";
                    mv "$srcPath" "$dstPath";
                fi;
            fi;
            local srcParent="$(readlink -m "$srcPath/..")";
            if [ -n "$(find "$srcParent" -maxdepth 0 -type d -empty 2> /dev/null)" ]; then
                echo "Removing empty $srcParent/ and (possibly) its parents";
                rmdir -p --ignore-fail-on-non-empty "$srcParent" 2> /dev/null || true;
            fi;
        done;
    done
}
patchELF ()
{
 
    local dir="$1";
    [ -e "$dir" ] || return 0;
    echo "shrinking RPATHs of ELF executables and libraries in $dir";
    local i;
    while IFS= read -r -d '' i; do
        if [[ "$i" =~ .build-id ]]; then
            continue;
        fi;
        if ! isELF "$i"; then
            continue;
        fi;
        echo "shrinking $i";
        patchelf --shrink-rpath "$i" || true;
    done < <(find "$dir" -type f -print0)
}
patchPhase ()
{
 
    runHook prePatch;
    local -a patchesArray;
    if [ -n "$__structuredAttrs" ]; then
        patchesArray=(${patches:+"${patches[@]}"});
    else
        patchesArray=(${patches:-});
    fi;
    for i in "${patchesArray[@]}";
    do
        echo "applying patch $i";
        local uncompress=cat;
        case "$i" in 
            *.gz)
                uncompress="gzip -d"
            ;;
            *.bz2)
                uncompress="bzip2 -d"
            ;;
            *.xz)
                uncompress="xz -d"
            ;;
            *.lzma)
                uncompress="lzma -d"
            ;;
        esac;
        local -a flagsArray;
        if [ -n "$__structuredAttrs" ]; then
            flagsArray=("${patchFlags[@]:--p1}");
        else
            flagsArray=(${patchFlags:--p1});
        fi;
        $uncompress < "$i" 2>&1 | patch "${flagsArray[@]}";
    done;
    runHook postPatch
}
patchShebangs ()
{
 
    local pathName;
    local update;
    while [[ $# -gt 0 ]]; do
        case "$1" in 
            --host)
                pathName=HOST_PATH;
                shift
            ;;
            --build)
                pathName=PATH;
                shift
            ;;
            --update)
                update=true;
                shift
            ;;
            --)
                shift;
                break
            ;;
            -* | --*)
                echo "Unknown option $1 supplied to patchShebangs" 1>&2;
                return 1
            ;;
            *)
                break
            ;;
        esac;
    done;
    echo "patching script interpreter paths in $@";
    local f;
    local oldPath;
    local newPath;
    local arg0;
    local args;
    local oldInterpreterLine;
    local newInterpreterLine;
    if [[ $# -eq 0 ]]; then
        echo "No arguments supplied to patchShebangs" 1>&2;
        return 0;
    fi;
    local f;
    while IFS= read -r -d '' f; do
        isScript "$f" || continue;
        read -r oldInterpreterLine < "$f";
        read -r oldPath arg0 args <<< "${oldInterpreterLine:2}";
        if [[ -z "${pathName:-}" ]]; then
            if [[ -n $strictDeps && $f == "$NIX_STORE"* ]]; then
                pathName=HOST_PATH;
            else
                pathName=PATH;
            fi;
        fi;
        if [[ "$oldPath" == *"/bin/env" ]]; then
            if [[ $arg0 == "-S" ]]; then
                arg0=${args%% *};
                args=${args#* };
                newPath="$(PATH="${!pathName}" command -v "env" || true)";
                args="-S $(PATH="${!pathName}" command -v "$arg0" || true) $args";
            else
                if [[ $arg0 == "-"* || $arg0 == *"="* ]]; then
                    echo "$f: unsupported interpreter directive \"$oldInterpreterLine\" (set dontPatchShebangs=1 and handle shebang patching yourself)" 1>&2;
                    exit 1;
                else
                    newPath="$(PATH="${!pathName}" command -v "$arg0" || true)";
                fi;
            fi;
        else
            if [[ -z $oldPath ]]; then
                oldPath="/bin/sh";
            fi;
            newPath="$(PATH="${!pathName}" command -v "$(basename "$oldPath")" || true)";
            args="$arg0 $args";
        fi;
        newInterpreterLine="$newPath $args";
        newInterpreterLine=${newInterpreterLine%${newInterpreterLine##*[![:space:]]}};
        if [[ -n "$oldPath" && ( "$update" == true || "${oldPath:0:${#NIX_STORE}}" != "$NIX_STORE" ) ]]; then
            if [[ -n "$newPath" && "$newPath" != "$oldPath" ]]; then
                echo "$f: interpreter directive changed from \"$oldInterpreterLine\" to \"$newInterpreterLine\"";
                escapedInterpreterLine=${newInterpreterLine//\\/\\\\};
                timestamp=$(stat --printf "%y" "$f");
                sed -i -e "1 s|.*|#\!$escapedInterpreterLine|" "$f";
                touch --date "$timestamp" "$f";
            fi;
        fi;
    done < <(find "$@" -type f -perm -0100 -print0)
}
patchShebangsAuto ()
{
 
    if [[ -z "${dontPatchShebangs-}" && -e "$prefix" ]]; then
        if [[ "$output" != out && "$output" = "$outputDev" ]]; then
            patchShebangs --build "$prefix";
        else
            patchShebangs --host "$prefix";
        fi;
    fi
}
prependToVar ()
{
 
    local -n nameref="$1";
    local useArray type;
    if [ -n "$__structuredAttrs" ]; then
        useArray=true;
    else
        useArray=false;
    fi;
    if declare -p "$1" 2> /dev/null | grep -q '^'; then
        type="$(declare -p "$1")";
        if [[ "$type" =~ "declare -A" ]]; then
            echo "prependToVar(): ERROR: trying to use prependToVar on an associative array." 1>&2;
            return 1;
        else
            if [[ "$type" =~ "declare -a" ]]; then
                useArray=true;
            else
                useArray=false;
            fi;
        fi;
    fi;
    shift;
    if $useArray; then
        nameref=("$@" ${nameref+"${nameref[@]}"});
    else
        nameref="$* ${nameref-}";
    fi
}
printLines ()
{
 
    (( "$#" > 0 )) || return 0;
    printf '%s\n' "$@"
}
printWords ()
{
 
    (( "$#" > 0 )) || return 0;
    printf '%s ' "$@"
}
recordPropagatedDependencies ()
{
 
    declare -ra flatVars=(depsBuildBuildPropagated propagatedNativeBuildInputs depsBuildTargetPropagated depsHostHostPropagated propagatedBuildInputs depsTargetTargetPropagated);
    declare -ra flatFiles=("${propagatedBuildDepFiles[@]}" "${propagatedHostDepFiles[@]}" "${propagatedTargetDepFiles[@]}");
    local propagatedInputsIndex;
    for propagatedInputsIndex in "${!flatVars[@]}";
    do
        local propagatedInputsSlice="${flatVars[$propagatedInputsIndex]}[@]";
        local propagatedInputsFile="${flatFiles[$propagatedInputsIndex]}";
        [[ -n "${!propagatedInputsSlice}" ]] || continue;
        mkdir -p "${!outputDev}/nix-support";
        printWords ${!propagatedInputsSlice} > "${!outputDev}/nix-support/$propagatedInputsFile";
    done
}
runHook ()
{
 
    local hookName="$1";
    shift;
    local hooksSlice="${hookName%Hook}Hooks[@]";
    local hook;
    for hook in "_callImplicitHook 0 $hookName" ${!hooksSlice+"${!hooksSlice}"};
    do
        _eval "$hook" "$@";
    done;
    return 0
}
runOneHook ()
{
 
    local hookName="$1";
    shift;
    local hooksSlice="${hookName%Hook}Hooks[@]";
    local hook ret=1;
    for hook in "_callImplicitHook 1 $hookName" ${!hooksSlice+"${!hooksSlice}"};
    do
        if _eval "$hook" "$@"; then
            ret=0;
            break;
        fi;
    done;
    return "$ret"
}
showPhaseFooter ()
{
 
    local phase="$1";
    local startTime="$2";
    local endTime="$3";
    local delta=$(( endTime - startTime ));
    (( delta < 30 )) && return;
    local H=$((delta/3600));
    local M=$((delta%3600/60));
    local S=$((delta%60));
    echo -n "$phase completed in ";
    (( H > 0 )) && echo -n "$H hours ";
    (( M > 0 )) && echo -n "$M minutes ";
    echo "$S seconds"
}
showPhaseHeader ()
{
 
    local phase="$1";
    case "$phase" in 
        unpackPhase)
            echo "unpacking sources"
        ;;
        patchPhase)
            echo "patching sources"
        ;;
        configurePhase)
            echo "configuring"
        ;;
        buildPhase)
            echo "building"
        ;;
        checkPhase)
            echo "running tests"
        ;;
        installPhase)
            echo "installing"
        ;;
        fixupPhase)
            echo "post-installation fixup"
        ;;
        installCheckPhase)
            echo "running install tests"
        ;;
        *)
            echo "$phase"
        ;;
    esac
}
stripDirs ()
{
 
    local cmd="$1";
    local ranlibCmd="$2";
    local paths="$3";
    local stripFlags="$4";
    local excludeFlags=();
    local pathsNew=;
    [ -z "$cmd" ] && echo "stripDirs: Strip command is empty" 1>&2 && exit 1;
    [ -z "$ranlibCmd" ] && echo "stripDirs: Ranlib command is empty" 1>&2 && exit 1;
    local pattern;
    if [ -n "${stripExclude:-}" ]; then
        for pattern in "${stripExclude[@]}";
        do
            excludeFlags+=(-a '!' '(' -name "$pattern" -o -wholename "$prefix/$pattern" ')');
        done;
    fi;
    local p;
    for p in ${paths};
    do
        if [ -e "$prefix/$p" ]; then
            pathsNew="${pathsNew} $prefix/$p";
        fi;
    done;
    paths=${pathsNew};
    if [ -n "${paths}" ]; then
        echo "stripping (with command $cmd and flags $stripFlags) in $paths";
        local striperr;
        striperr="$(mktemp --tmpdir="$TMPDIR" 'striperr.XXXXXX')";
        find $paths -type f "${excludeFlags[@]}" -a '!' -path "$prefix/lib/debug/*" -print0 | xargs -r -0 -n1 -- realpath -z | sort -u -z | xargs -r -0 -n1 -P "$NIX_BUILD_CORES" -- $cmd $stripFlags 2> "$striperr" || exit_code=$?;
        [[ "$exit_code" = 123 || -z "$exit_code" ]] || ( cat "$striperr" 1>&2 && exit 1 );
        rm "$striperr";
        find $paths -name '*.a' -type f -exec $ranlibCmd '{}' \; 2> /dev/null;
    fi
}
stripHash ()
{
 
    local strippedName casematchOpt=0;
    strippedName="$(basename -- "$1")";
    shopt -q nocasematch && casematchOpt=1;
    shopt -u nocasematch;
    if [[ "$strippedName" =~ ^[a-z0-9]{32}- ]]; then
        echo "${strippedName:33}";
    else
        echo "$strippedName";
    fi;
    if (( casematchOpt )); then
        shopt -s nocasematch;
    fi
}
substitute ()
{
 
    local input="$1";
    local output="$2";
    shift 2;
    if [ ! -f "$input" ]; then
        echo "substitute(): ERROR: file '$input' does not exist" 1>&2;
        return 1;
    fi;
    local content;
    consumeEntire content < "$input";
    if [ -e "$output" ]; then
        chmod +w "$output";
    fi;
    substituteStream content "file '$input'" "$@" > "$output"
}
substituteAll ()
{
 
    local input="$1";
    local output="$2";
    local -a args=();
    _allFlags;
    substitute "$input" "$output" "${args[@]}"
}
substituteAllInPlace ()
{
 
    local fileName="$1";
    shift;
    substituteAll "$fileName" "$fileName" "$@"
}
substituteAllStream ()
{
 
    local -a args=();
    _allFlags;
    substituteStream "$1" "$2" "${args[@]}"
}
substituteInPlace ()
{
 
    local -a fileNames=();
    for arg in "$@";
    do
        if [[ "$arg" = "--"* ]]; then
            break;
        fi;
        fileNames+=("$arg");
        shift;
    done;
    for file in "${fileNames[@]}";
    do
        substitute "$file" "$file" "$@";
    done
}
substituteStream ()
{
 
    local var=$1;
    local description=$2;
    shift 2;
    while (( "$#" )); do
        case "$1" in 
            --replace)
                pattern="$2";
                replacement="$3";
                shift 3;
                local savedvar;
                savedvar="${!var}";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}';
                if [ "$pattern" != "$replacement" ]; then
                    if [ "${!var}" == "$savedvar" ]; then
                        echo "substituteStream(): WARNING: pattern '$pattern' doesn't match anything in $description" 1>&2;
                    fi;
                fi
            ;;
            --subst-var)
                local varName="$2";
                shift 2;
                if ! [[ "$varName" =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]; then
                    echo "substituteStream(): ERROR: substitution variables must be valid Bash names, \"$varName\" isn't." 1>&2;
                    return 1;
                fi;
                if [ -z ${!varName+x} ]; then
                    echo "substituteStream(): ERROR: variable \$$varName is unset" 1>&2;
                    return 1;
                fi;
                pattern="@$varName@";
                replacement="${!varName}";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}'
            ;;
            --subst-var-by)
                pattern="@$2@";
                replacement="$3";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}';
                shift 3
            ;;
            *)
                echo "substituteStream(): ERROR: Invalid command line argument: $1" 1>&2;
                return 1
            ;;
        esac;
    done;
    printf "%s" "${!var}"
}
unpackFile ()
{
 
    curSrc="$1";
    echo "unpacking source archive $curSrc";
    if ! runOneHook unpackCmd "$curSrc"; then
        echo "do not know how to unpack source archive $curSrc";
        exit 1;
    fi
}
unpackPhase ()
{
 
    runHook preUnpack;
    if [ -z "${srcs:-}" ]; then
        if [ -z "${src:-}" ]; then
            echo 'variable $src or $srcs should point to the source';
            exit 1;
        fi;
        srcs="$src";
    fi;
    local -a srcsArray;
    if [ -n "$__structuredAttrs" ]; then
        srcsArray=("${srcs[@]}");
    else
        srcsArray=($srcs);
    fi;
    local dirsBefore="";
    for i in *;
    do
        if [ -d "$i" ]; then
            dirsBefore="$dirsBefore $i ";
        fi;
    done;
    for i in "${srcsArray[@]}";
    do
        unpackFile "$i";
    done;
    : "${sourceRoot=}";
    if [ -n "${setSourceRoot:-}" ]; then
        runOneHook setSourceRoot;
    else
        if [ -z "$sourceRoot" ]; then
            for i in *;
            do
                if [ -d "$i" ]; then
                    case $dirsBefore in 
                        *\ $i\ *)

                        ;;
                        *)
                            if [ -n "$sourceRoot" ]; then
                                echo "unpacker produced multiple directories";
                                exit 1;
                            fi;
                            sourceRoot="$i"
                        ;;
                    esac;
                fi;
            done;
        fi;
    fi;
    if [ -z "$sourceRoot" ]; then
        echo "unpacker appears to have produced no directories";
        exit 1;
    fi;
    echo "source root is $sourceRoot";
    if [ "${dontMakeSourcesWritable:-0}" != 1 ]; then
        chmod -R u+w -- "$sourceRoot";
    fi;
    runHook postUnpack
}
updateAutotoolsGnuConfigScriptsPhase ()
{
 
    if [ -n "${dontUpdateAutotoolsGnuConfigScripts-}" ]; then
        return;
    fi;
    for script in config.sub config.guess;
    do
        for f in $(find . -type f -name "$script");
        do
            echo "Updating Autotools / GNU config script to a newer upstream version: $f";
            cp -f "/nix/store/pnndfnlqvbfj0m86q7dxnyk2lw88k6a8-gnu-config-2023-07-31/$script" "$f";
        done;
    done
}
updateSourceDateEpoch ()
{
 
    local path="$1";
    local -a res=($(find "$path" -type f -not -newer "$NIX_BUILD_TOP/.." -printf '%T@ %p\0' | sort -n --zero-terminated | tail -n1 --zero-terminated | head -c -1));
    local time="${res[0]//\.[0-9]*/}";
    local newestFile="${res[1]}";
    if [ "${time:-0}" -gt "$SOURCE_DATE_EPOCH" ]; then
        echo "setting SOURCE_DATE_EPOCH to timestamp $time of file $newestFile";
        export SOURCE_DATE_EPOCH="$time";
        local now="$(date +%s)";
        if [ "$time" -gt $((now - 60)) ]; then
            echo "warning: file $newestFile may be generated; SOURCE_DATE_EPOCH may be non-deterministic";
        fi;
    fi
}
PATH="$PATH${nix_saved_PATH:+:$nix_saved_PATH}"
XDG_DATA_DIRS="$XDG_DATA_DIRS${nix_saved_XDG_DATA_DIRS:+:$nix_saved_XDG_DATA_DIRS}"
export NIX_BUILD_TOP="$(mktemp -d -t nix-shell.XXXXXX)"
export TMP="$NIX_BUILD_TOP"
export TMPDIR="$NIX_BUILD_TOP"
export TEMP="$NIX_BUILD_TOP"
export TEMPDIR="$NIX_BUILD_TOP"
eval "$shellHook"
